'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
'
Namespace _WS_LISA
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WS_LisaSoap", [Namespace]:="http://steward.cl/wservicesLisaERP")>  _
    Partial Public Class WS_Lisa
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConsultaStockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaListaPrecioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AgregaDireccion888OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AgregaDireccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AgregaContactoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AgregaClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaEstadoPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaEstadoClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaMontoFleteLisaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaEjecutivoVentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateDireccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDireccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteContactoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCuadroMandoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaPosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVenedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutentificacionWOPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaProductosFiltradosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaCreditoStewardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaTerminosDePagoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PerfilClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FoliosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CobranzaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GirosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FiltroClientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExistenciaDocumentosPagoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.pos_Steward.My.MySettings.Default.Pos2__WS_LISA_WS_Lisa
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConsultaStockCompleted As ConsultaStockCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaListaPrecioCompleted As ConsultaListaPrecioCompletedEventHandler
        
        '''<remarks/>
        Public Event AgregaDireccion888Completed As AgregaDireccion888CompletedEventHandler
        
        '''<remarks/>
        Public Event AgregaDireccionCompleted As AgregaDireccionCompletedEventHandler
        
        '''<remarks/>
        Public Event AgregaContactoCompleted As AgregaContactoCompletedEventHandler
        
        '''<remarks/>
        Public Event AgregaClienteCompleted As AgregaClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaClienteCompleted As ConsultaClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaEstadoPedidoCompleted As ConsultaEstadoPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaEstadoClienteCompleted As ConsultaEstadoClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaMontoFleteLisaCompleted As ConsultaMontoFleteLisaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaEjecutivoVentasCompleted As ConsultaEjecutivoVentasCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateClienteCompleted As UpdateClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateDireccionCompleted As UpdateDireccionCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDireccionCompleted As DeleteDireccionCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteContactoCompleted As DeleteContactoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCuadroMandoCompleted As GetCuadroMandoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaPosCompleted As ConsultaPosCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVenedoresCompleted As GetVenedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event AutentificacionWOPCompleted As AutentificacionWOPCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaProductosFiltradosCompleted As ConsultaProductosFiltradosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaCreditoStewardCompleted As ConsultaCreditoStewardCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaTerminosDePagoCompleted As ConsultaTerminosDePagoCompletedEventHandler
        
        '''<remarks/>
        Public Event PerfilClienteCompleted As PerfilClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event FoliosCompleted As FoliosCompletedEventHandler
        
        '''<remarks/>
        Public Event CobranzaCompleted As CobranzaCompletedEventHandler
        
        '''<remarks/>
        Public Event GirosCompleted As GirosCompletedEventHandler
        
        '''<remarks/>
        Public Event FiltroClientesCompleted As FiltroClientesCompletedEventHandler
        
        '''<remarks/>
        Public Event ExistenciaDocumentosPagoCompleted As ExistenciaDocumentosPagoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaStock", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaStock(ByVal strCodigoEmpresa As String, ByVal strCodigoBodega As String, ByVal strCodigoProducto As String, ByVal fltPorcentajeIncidencia As Single) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ConsultaStock", New Object() {strCodigoEmpresa, strCodigoBodega, strCodigoProducto, fltPorcentajeIncidencia})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaStockAsync(ByVal strCodigoEmpresa As String, ByVal strCodigoBodega As String, ByVal strCodigoProducto As String, ByVal fltPorcentajeIncidencia As Single)
            Me.ConsultaStockAsync(strCodigoEmpresa, strCodigoBodega, strCodigoProducto, fltPorcentajeIncidencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaStockAsync(ByVal strCodigoEmpresa As String, ByVal strCodigoBodega As String, ByVal strCodigoProducto As String, ByVal fltPorcentajeIncidencia As Single, ByVal userState As Object)
            If (Me.ConsultaStockOperationCompleted Is Nothing) Then
                Me.ConsultaStockOperationCompleted = AddressOf Me.OnConsultaStockOperationCompleted
            End If
            Me.InvokeAsync("ConsultaStock", New Object() {strCodigoEmpresa, strCodigoBodega, strCodigoProducto, fltPorcentajeIncidencia}, Me.ConsultaStockOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaStockOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaStockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaStockCompleted(Me, New ConsultaStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaListaPrecio", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaListaPrecio(ByVal strCodigoEmpresa As String, ByVal intListaPrecio As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ConsultaListaPrecio", New Object() {strCodigoEmpresa, intListaPrecio})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaListaPrecioAsync(ByVal strCodigoEmpresa As String, ByVal intListaPrecio As Integer)
            Me.ConsultaListaPrecioAsync(strCodigoEmpresa, intListaPrecio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaListaPrecioAsync(ByVal strCodigoEmpresa As String, ByVal intListaPrecio As Integer, ByVal userState As Object)
            If (Me.ConsultaListaPrecioOperationCompleted Is Nothing) Then
                Me.ConsultaListaPrecioOperationCompleted = AddressOf Me.OnConsultaListaPrecioOperationCompleted
            End If
            Me.InvokeAsync("ConsultaListaPrecio", New Object() {strCodigoEmpresa, intListaPrecio}, Me.ConsultaListaPrecioOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaListaPrecioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaListaPrecioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaListaPrecioCompleted(Me, New ConsultaListaPrecioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/AgregaDireccion888", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregaDireccion888(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("AgregaDireccion888", New Object() {strCodigoEmpresa, intRutClienteSinDV})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AgregaDireccion888Async(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer)
            Me.AgregaDireccion888Async(strCodigoEmpresa, intRutClienteSinDV, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AgregaDireccion888Async(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal userState As Object)
            If (Me.AgregaDireccion888OperationCompleted Is Nothing) Then
                Me.AgregaDireccion888OperationCompleted = AddressOf Me.OnAgregaDireccion888OperationCompleted
            End If
            Me.InvokeAsync("AgregaDireccion888", New Object() {strCodigoEmpresa, intRutClienteSinDV}, Me.AgregaDireccion888OperationCompleted, userState)
        End Sub
        
        Private Sub OnAgregaDireccion888OperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregaDireccion888CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregaDireccion888Completed(Me, New AgregaDireccion888CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/AgregaDireccion", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregaDireccion(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strDireccionDetalle As String, ByVal intCodigoRegion As Integer, ByVal intCodigoCiudad As Integer, ByVal intCodigoComuna As Integer, ByVal intEsDireccionFacturacion As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("AgregaDireccion", New Object() {strCodigoEmpresa, intRutClienteSinDV, strDireccionDetalle, intCodigoRegion, intCodigoCiudad, intCodigoComuna, intEsDireccionFacturacion})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AgregaDireccionAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strDireccionDetalle As String, ByVal intCodigoRegion As Integer, ByVal intCodigoCiudad As Integer, ByVal intCodigoComuna As Integer, ByVal intEsDireccionFacturacion As Integer)
            Me.AgregaDireccionAsync(strCodigoEmpresa, intRutClienteSinDV, strDireccionDetalle, intCodigoRegion, intCodigoCiudad, intCodigoComuna, intEsDireccionFacturacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AgregaDireccionAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strDireccionDetalle As String, ByVal intCodigoRegion As Integer, ByVal intCodigoCiudad As Integer, ByVal intCodigoComuna As Integer, ByVal intEsDireccionFacturacion As Integer, ByVal userState As Object)
            If (Me.AgregaDireccionOperationCompleted Is Nothing) Then
                Me.AgregaDireccionOperationCompleted = AddressOf Me.OnAgregaDireccionOperationCompleted
            End If
            Me.InvokeAsync("AgregaDireccion", New Object() {strCodigoEmpresa, intRutClienteSinDV, strDireccionDetalle, intCodigoRegion, intCodigoCiudad, intCodigoComuna, intEsDireccionFacturacion}, Me.AgregaDireccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAgregaDireccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregaDireccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregaDireccionCompleted(Me, New AgregaDireccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/AgregaContacto", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregaContacto( _
                    ByVal strCodigoEmpresa As String,  _
                    ByVal intRutClienteSinDV As Integer,  _
                    ByVal strNombreContacto As String,  _
                    ByVal MBAUXCTOTI As String,  _
                    ByVal intPrefijoTelefonoContacto As Integer,  _
                    ByVal intTelefonoContacto As Integer,  _
                    ByVal intPrefijoTelefonoMovilContacto As Integer,  _
                    ByVal intTelefonoMovilContacto As Integer,  _
                    ByVal intPrefijoFaxContacto As Integer,  _
                    ByVal intFaxContacto As Integer,  _
                    ByVal strMailContacto As String,  _
                    ByVal MBAUXCTOCI As String,  _
                    ByVal intCodigoTelefonicoPais As Integer,  _
                    ByVal intCodigoDireccion As Integer,  _
                    ByVal strRutContactoSinDV As String,  _
                    ByVal strDVContacto As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("AgregaContacto", New Object() {strCodigoEmpresa, intRutClienteSinDV, strNombreContacto, MBAUXCTOTI, intPrefijoTelefonoContacto, intTelefonoContacto, intPrefijoTelefonoMovilContacto, intTelefonoMovilContacto, intPrefijoFaxContacto, intFaxContacto, strMailContacto, MBAUXCTOCI, intCodigoTelefonicoPais, intCodigoDireccion, strRutContactoSinDV, strDVContacto})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AgregaContactoAsync( _
                    ByVal strCodigoEmpresa As String,  _
                    ByVal intRutClienteSinDV As Integer,  _
                    ByVal strNombreContacto As String,  _
                    ByVal MBAUXCTOTI As String,  _
                    ByVal intPrefijoTelefonoContacto As Integer,  _
                    ByVal intTelefonoContacto As Integer,  _
                    ByVal intPrefijoTelefonoMovilContacto As Integer,  _
                    ByVal intTelefonoMovilContacto As Integer,  _
                    ByVal intPrefijoFaxContacto As Integer,  _
                    ByVal intFaxContacto As Integer,  _
                    ByVal strMailContacto As String,  _
                    ByVal MBAUXCTOCI As String,  _
                    ByVal intCodigoTelefonicoPais As Integer,  _
                    ByVal intCodigoDireccion As Integer,  _
                    ByVal strRutContactoSinDV As String,  _
                    ByVal strDVContacto As String)
            Me.AgregaContactoAsync(strCodigoEmpresa, intRutClienteSinDV, strNombreContacto, MBAUXCTOTI, intPrefijoTelefonoContacto, intTelefonoContacto, intPrefijoTelefonoMovilContacto, intTelefonoMovilContacto, intPrefijoFaxContacto, intFaxContacto, strMailContacto, MBAUXCTOCI, intCodigoTelefonicoPais, intCodigoDireccion, strRutContactoSinDV, strDVContacto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AgregaContactoAsync( _
                    ByVal strCodigoEmpresa As String,  _
                    ByVal intRutClienteSinDV As Integer,  _
                    ByVal strNombreContacto As String,  _
                    ByVal MBAUXCTOTI As String,  _
                    ByVal intPrefijoTelefonoContacto As Integer,  _
                    ByVal intTelefonoContacto As Integer,  _
                    ByVal intPrefijoTelefonoMovilContacto As Integer,  _
                    ByVal intTelefonoMovilContacto As Integer,  _
                    ByVal intPrefijoFaxContacto As Integer,  _
                    ByVal intFaxContacto As Integer,  _
                    ByVal strMailContacto As String,  _
                    ByVal MBAUXCTOCI As String,  _
                    ByVal intCodigoTelefonicoPais As Integer,  _
                    ByVal intCodigoDireccion As Integer,  _
                    ByVal strRutContactoSinDV As String,  _
                    ByVal strDVContacto As String,  _
                    ByVal userState As Object)
            If (Me.AgregaContactoOperationCompleted Is Nothing) Then
                Me.AgregaContactoOperationCompleted = AddressOf Me.OnAgregaContactoOperationCompleted
            End If
            Me.InvokeAsync("AgregaContacto", New Object() {strCodigoEmpresa, intRutClienteSinDV, strNombreContacto, MBAUXCTOTI, intPrefijoTelefonoContacto, intTelefonoContacto, intPrefijoTelefonoMovilContacto, intTelefonoMovilContacto, intPrefijoFaxContacto, intFaxContacto, strMailContacto, MBAUXCTOCI, intCodigoTelefonicoPais, intCodigoDireccion, strRutContactoSinDV, strDVContacto}, Me.AgregaContactoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAgregaContactoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregaContactoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregaContactoCompleted(Me, New AgregaContactoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/AgregaCliente", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregaCliente(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strDigitoVerificador As String, ByVal strRazonSocial As String, ByVal strNombreFantasia As String, ByVal intCodigoGiro As Integer, ByVal intListaPrecioVenta As Integer, ByVal intListaPrecioArriendo As Integer, ByVal intListaPrecioReposicion As Integer, ByVal strCodigoVendedor As String, ByVal strTipoCliente As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("AgregaCliente", New Object() {strCodigoEmpresa, intRutClienteSinDV, strDigitoVerificador, strRazonSocial, strNombreFantasia, intCodigoGiro, intListaPrecioVenta, intListaPrecioArriendo, intListaPrecioReposicion, strCodigoVendedor, strTipoCliente})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AgregaClienteAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strDigitoVerificador As String, ByVal strRazonSocial As String, ByVal strNombreFantasia As String, ByVal intCodigoGiro As Integer, ByVal intListaPrecioVenta As Integer, ByVal intListaPrecioArriendo As Integer, ByVal intListaPrecioReposicion As Integer, ByVal strCodigoVendedor As String, ByVal strTipoCliente As String)
            Me.AgregaClienteAsync(strCodigoEmpresa, intRutClienteSinDV, strDigitoVerificador, strRazonSocial, strNombreFantasia, intCodigoGiro, intListaPrecioVenta, intListaPrecioArriendo, intListaPrecioReposicion, strCodigoVendedor, strTipoCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AgregaClienteAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strDigitoVerificador As String, ByVal strRazonSocial As String, ByVal strNombreFantasia As String, ByVal intCodigoGiro As Integer, ByVal intListaPrecioVenta As Integer, ByVal intListaPrecioArriendo As Integer, ByVal intListaPrecioReposicion As Integer, ByVal strCodigoVendedor As String, ByVal strTipoCliente As String, ByVal userState As Object)
            If (Me.AgregaClienteOperationCompleted Is Nothing) Then
                Me.AgregaClienteOperationCompleted = AddressOf Me.OnAgregaClienteOperationCompleted
            End If
            Me.InvokeAsync("AgregaCliente", New Object() {strCodigoEmpresa, intRutClienteSinDV, strDigitoVerificador, strRazonSocial, strNombreFantasia, intCodigoGiro, intListaPrecioVenta, intListaPrecioArriendo, intListaPrecioReposicion, strCodigoVendedor, strTipoCliente}, Me.AgregaClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnAgregaClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregaClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregaClienteCompleted(Me, New AgregaClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaCliente", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaCliente(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ConsultaCliente", New Object() {strCodigoEmpresa, intRutClienteSinDV})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaClienteAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer)
            Me.ConsultaClienteAsync(strCodigoEmpresa, intRutClienteSinDV, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaClienteAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal userState As Object)
            If (Me.ConsultaClienteOperationCompleted Is Nothing) Then
                Me.ConsultaClienteOperationCompleted = AddressOf Me.OnConsultaClienteOperationCompleted
            End If
            Me.InvokeAsync("ConsultaCliente", New Object() {strCodigoEmpresa, intRutClienteSinDV}, Me.ConsultaClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaClienteCompleted(Me, New ConsultaClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaEstadoPedido", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaEstadoPedido(ByVal strCodigoEmpresa As String, ByVal intFolioLisa As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ConsultaEstadoPedido", New Object() {strCodigoEmpresa, intFolioLisa})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaEstadoPedidoAsync(ByVal strCodigoEmpresa As String, ByVal intFolioLisa As Integer)
            Me.ConsultaEstadoPedidoAsync(strCodigoEmpresa, intFolioLisa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaEstadoPedidoAsync(ByVal strCodigoEmpresa As String, ByVal intFolioLisa As Integer, ByVal userState As Object)
            If (Me.ConsultaEstadoPedidoOperationCompleted Is Nothing) Then
                Me.ConsultaEstadoPedidoOperationCompleted = AddressOf Me.OnConsultaEstadoPedidoOperationCompleted
            End If
            Me.InvokeAsync("ConsultaEstadoPedido", New Object() {strCodigoEmpresa, intFolioLisa}, Me.ConsultaEstadoPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaEstadoPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaEstadoPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaEstadoPedidoCompleted(Me, New ConsultaEstadoPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaEstadoCliente", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaEstadoCliente(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ConsultaEstadoCliente", New Object() {strCodigoEmpresa, intRutClienteSinDV})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaEstadoClienteAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer)
            Me.ConsultaEstadoClienteAsync(strCodigoEmpresa, intRutClienteSinDV, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaEstadoClienteAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal userState As Object)
            If (Me.ConsultaEstadoClienteOperationCompleted Is Nothing) Then
                Me.ConsultaEstadoClienteOperationCompleted = AddressOf Me.OnConsultaEstadoClienteOperationCompleted
            End If
            Me.InvokeAsync("ConsultaEstadoCliente", New Object() {strCodigoEmpresa, intRutClienteSinDV}, Me.ConsultaEstadoClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaEstadoClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaEstadoClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaEstadoClienteCompleted(Me, New ConsultaEstadoClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaMontoFleteLisa", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaMontoFleteLisa(ByVal strCodigoEmpresa As String, ByVal strXmlListaProductos As String, ByVal intCodigoComunaDespacho As Integer, ByVal strHorarioEntrega As String, ByVal strHorarioRetiro As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ConsultaMontoFleteLisa", New Object() {strCodigoEmpresa, strXmlListaProductos, intCodigoComunaDespacho, strHorarioEntrega, strHorarioRetiro})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaMontoFleteLisaAsync(ByVal strCodigoEmpresa As String, ByVal strXmlListaProductos As String, ByVal intCodigoComunaDespacho As Integer, ByVal strHorarioEntrega As String, ByVal strHorarioRetiro As String)
            Me.ConsultaMontoFleteLisaAsync(strCodigoEmpresa, strXmlListaProductos, intCodigoComunaDespacho, strHorarioEntrega, strHorarioRetiro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaMontoFleteLisaAsync(ByVal strCodigoEmpresa As String, ByVal strXmlListaProductos As String, ByVal intCodigoComunaDespacho As Integer, ByVal strHorarioEntrega As String, ByVal strHorarioRetiro As String, ByVal userState As Object)
            If (Me.ConsultaMontoFleteLisaOperationCompleted Is Nothing) Then
                Me.ConsultaMontoFleteLisaOperationCompleted = AddressOf Me.OnConsultaMontoFleteLisaOperationCompleted
            End If
            Me.InvokeAsync("ConsultaMontoFleteLisa", New Object() {strCodigoEmpresa, strXmlListaProductos, intCodigoComunaDespacho, strHorarioEntrega, strHorarioRetiro}, Me.ConsultaMontoFleteLisaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaMontoFleteLisaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaMontoFleteLisaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaMontoFleteLisaCompleted(Me, New ConsultaMontoFleteLisaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaEjecutivoVentas", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaEjecutivoVentas(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaEjecutivoVentas", New Object() {strCodigoEmpresa, intRutClienteSinDV})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaEjecutivoVentasAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer)
            Me.ConsultaEjecutivoVentasAsync(strCodigoEmpresa, intRutClienteSinDV, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaEjecutivoVentasAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal userState As Object)
            If (Me.ConsultaEjecutivoVentasOperationCompleted Is Nothing) Then
                Me.ConsultaEjecutivoVentasOperationCompleted = AddressOf Me.OnConsultaEjecutivoVentasOperationCompleted
            End If
            Me.InvokeAsync("ConsultaEjecutivoVentas", New Object() {strCodigoEmpresa, intRutClienteSinDV}, Me.ConsultaEjecutivoVentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaEjecutivoVentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaEjecutivoVentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaEjecutivoVentasCompleted(Me, New ConsultaEjecutivoVentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/UpdateCliente", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCliente(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strRazonNombre As String, ByVal intCodigoGiro As Integer) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCliente", New Object() {strCodigoEmpresa, intRutClienteSinDV, strRazonNombre, intCodigoGiro})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateClienteAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strRazonNombre As String, ByVal intCodigoGiro As Integer)
            Me.UpdateClienteAsync(strCodigoEmpresa, intRutClienteSinDV, strRazonNombre, intCodigoGiro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateClienteAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal strRazonNombre As String, ByVal intCodigoGiro As Integer, ByVal userState As Object)
            If (Me.UpdateClienteOperationCompleted Is Nothing) Then
                Me.UpdateClienteOperationCompleted = AddressOf Me.OnUpdateClienteOperationCompleted
            End If
            Me.InvokeAsync("UpdateCliente", New Object() {strCodigoEmpresa, intRutClienteSinDV, strRazonNombre, intCodigoGiro}, Me.UpdateClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateClienteCompleted(Me, New UpdateClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/UpdateDireccion", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateDireccion(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoDireccion As Integer, ByVal strDescripcionDireccion As String, ByVal intCodigoRegion As Integer, ByVal intCodigoCiudad As Integer, ByVal intCodigoComuna As Integer) As Boolean
            Dim results() As Object = Me.Invoke("UpdateDireccion", New Object() {strCodigoEmpresa, intRutClienteSinDV, intCodigoDireccion, strDescripcionDireccion, intCodigoRegion, intCodigoCiudad, intCodigoComuna})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateDireccionAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoDireccion As Integer, ByVal strDescripcionDireccion As String, ByVal intCodigoRegion As Integer, ByVal intCodigoCiudad As Integer, ByVal intCodigoComuna As Integer)
            Me.UpdateDireccionAsync(strCodigoEmpresa, intRutClienteSinDV, intCodigoDireccion, strDescripcionDireccion, intCodigoRegion, intCodigoCiudad, intCodigoComuna, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateDireccionAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoDireccion As Integer, ByVal strDescripcionDireccion As String, ByVal intCodigoRegion As Integer, ByVal intCodigoCiudad As Integer, ByVal intCodigoComuna As Integer, ByVal userState As Object)
            If (Me.UpdateDireccionOperationCompleted Is Nothing) Then
                Me.UpdateDireccionOperationCompleted = AddressOf Me.OnUpdateDireccionOperationCompleted
            End If
            Me.InvokeAsync("UpdateDireccion", New Object() {strCodigoEmpresa, intRutClienteSinDV, intCodigoDireccion, strDescripcionDireccion, intCodigoRegion, intCodigoCiudad, intCodigoComuna}, Me.UpdateDireccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateDireccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateDireccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateDireccionCompleted(Me, New UpdateDireccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/DeleteDireccion", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDireccion(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoDireccion As Integer) As Boolean
            Dim results() As Object = Me.Invoke("DeleteDireccion", New Object() {strCodigoEmpresa, intRutClienteSinDV, intCodigoDireccion})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDireccionAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoDireccion As Integer)
            Me.DeleteDireccionAsync(strCodigoEmpresa, intRutClienteSinDV, intCodigoDireccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDireccionAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoDireccion As Integer, ByVal userState As Object)
            If (Me.DeleteDireccionOperationCompleted Is Nothing) Then
                Me.DeleteDireccionOperationCompleted = AddressOf Me.OnDeleteDireccionOperationCompleted
            End If
            Me.InvokeAsync("DeleteDireccion", New Object() {strCodigoEmpresa, intRutClienteSinDV, intCodigoDireccion}, Me.DeleteDireccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDireccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDireccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDireccionCompleted(Me, New DeleteDireccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/DeleteContacto", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteContacto(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoContacto As Integer) As Boolean
            Dim results() As Object = Me.Invoke("DeleteContacto", New Object() {strCodigoEmpresa, intRutClienteSinDV, intCodigoContacto})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteContactoAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoContacto As Integer)
            Me.DeleteContactoAsync(strCodigoEmpresa, intRutClienteSinDV, intCodigoContacto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteContactoAsync(ByVal strCodigoEmpresa As String, ByVal intRutClienteSinDV As Integer, ByVal intCodigoContacto As Integer, ByVal userState As Object)
            If (Me.DeleteContactoOperationCompleted Is Nothing) Then
                Me.DeleteContactoOperationCompleted = AddressOf Me.OnDeleteContactoOperationCompleted
            End If
            Me.InvokeAsync("DeleteContacto", New Object() {strCodigoEmpresa, intRutClienteSinDV, intCodigoContacto}, Me.DeleteContactoOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteContactoOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteContactoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteContactoCompleted(Me, New DeleteContactoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/GetCuadroMando", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCuadroMando() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCuadroMando", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCuadroMandoAsync()
            Me.GetCuadroMandoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCuadroMandoAsync(ByVal userState As Object)
            If (Me.GetCuadroMandoOperationCompleted Is Nothing) Then
                Me.GetCuadroMandoOperationCompleted = AddressOf Me.OnGetCuadroMandoOperationCompleted
            End If
            Me.InvokeAsync("GetCuadroMando", New Object(-1) {}, Me.GetCuadroMandoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCuadroMandoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCuadroMandoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCuadroMandoCompleted(Me, New GetCuadroMandoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaPos", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaPos(ByVal tipo As String, ByVal empresa As String, ByVal CodigoLocal As String, ByVal Cliente As String, ByVal sku As String, ByVal cantidad As Integer, ByVal ListaPrecio As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaPos", New Object() {tipo, empresa, CodigoLocal, Cliente, sku, cantidad, ListaPrecio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaPosAsync(ByVal tipo As String, ByVal empresa As String, ByVal CodigoLocal As String, ByVal Cliente As String, ByVal sku As String, ByVal cantidad As Integer, ByVal ListaPrecio As String)
            Me.ConsultaPosAsync(tipo, empresa, CodigoLocal, Cliente, sku, cantidad, ListaPrecio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaPosAsync(ByVal tipo As String, ByVal empresa As String, ByVal CodigoLocal As String, ByVal Cliente As String, ByVal sku As String, ByVal cantidad As Integer, ByVal ListaPrecio As String, ByVal userState As Object)
            If (Me.ConsultaPosOperationCompleted Is Nothing) Then
                Me.ConsultaPosOperationCompleted = AddressOf Me.OnConsultaPosOperationCompleted
            End If
            Me.InvokeAsync("ConsultaPos", New Object() {tipo, empresa, CodigoLocal, Cliente, sku, cantidad, ListaPrecio}, Me.ConsultaPosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaPosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaPosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaPosCompleted(Me, New ConsultaPosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/GetVenedores", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVenedores(ByVal Empresa As String, ByVal Actividad As Char, ByVal codvendedor As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetVenedores", New Object() {Empresa, Actividad, codvendedor})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVenedoresAsync(ByVal Empresa As String, ByVal Actividad As Char, ByVal codvendedor As String)
            Me.GetVenedoresAsync(Empresa, Actividad, codvendedor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVenedoresAsync(ByVal Empresa As String, ByVal Actividad As Char, ByVal codvendedor As String, ByVal userState As Object)
            If (Me.GetVenedoresOperationCompleted Is Nothing) Then
                Me.GetVenedoresOperationCompleted = AddressOf Me.OnGetVenedoresOperationCompleted
            End If
            Me.InvokeAsync("GetVenedores", New Object() {Empresa, Actividad, codvendedor}, Me.GetVenedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVenedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVenedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVenedoresCompleted(Me, New GetVenedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/AutentificacionWOP", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutentificacionWOP(ByVal Usuario As String, ByVal password As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("AutentificacionWOP", New Object() {Usuario, password})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutentificacionWOPAsync(ByVal Usuario As String, ByVal password As String)
            Me.AutentificacionWOPAsync(Usuario, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutentificacionWOPAsync(ByVal Usuario As String, ByVal password As String, ByVal userState As Object)
            If (Me.AutentificacionWOPOperationCompleted Is Nothing) Then
                Me.AutentificacionWOPOperationCompleted = AddressOf Me.OnAutentificacionWOPOperationCompleted
            End If
            Me.InvokeAsync("AutentificacionWOP", New Object() {Usuario, password}, Me.AutentificacionWOPOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutentificacionWOPOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutentificacionWOPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutentificacionWOPCompleted(Me, New AutentificacionWOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaProductosFiltrados", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaProductosFiltrados(ByVal Tipo As String, ByVal Empresa As String, ByVal Patron As String, ByVal listaPrecio As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaProductosFiltrados", New Object() {Tipo, Empresa, Patron, listaPrecio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaProductosFiltradosAsync(ByVal Tipo As String, ByVal Empresa As String, ByVal Patron As String, ByVal listaPrecio As String)
            Me.ConsultaProductosFiltradosAsync(Tipo, Empresa, Patron, listaPrecio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaProductosFiltradosAsync(ByVal Tipo As String, ByVal Empresa As String, ByVal Patron As String, ByVal listaPrecio As String, ByVal userState As Object)
            If (Me.ConsultaProductosFiltradosOperationCompleted Is Nothing) Then
                Me.ConsultaProductosFiltradosOperationCompleted = AddressOf Me.OnConsultaProductosFiltradosOperationCompleted
            End If
            Me.InvokeAsync("ConsultaProductosFiltrados", New Object() {Tipo, Empresa, Patron, listaPrecio}, Me.ConsultaProductosFiltradosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaProductosFiltradosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaProductosFiltradosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaProductosFiltradosCompleted(Me, New ConsultaProductosFiltradosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaCreditoSteward", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaCreditoSteward(ByVal empresa As String, ByVal cliente As String, ByVal monto As Single) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaCreditoSteward", New Object() {empresa, cliente, monto})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaCreditoStewardAsync(ByVal empresa As String, ByVal cliente As String, ByVal monto As Single)
            Me.ConsultaCreditoStewardAsync(empresa, cliente, monto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaCreditoStewardAsync(ByVal empresa As String, ByVal cliente As String, ByVal monto As Single, ByVal userState As Object)
            If (Me.ConsultaCreditoStewardOperationCompleted Is Nothing) Then
                Me.ConsultaCreditoStewardOperationCompleted = AddressOf Me.OnConsultaCreditoStewardOperationCompleted
            End If
            Me.InvokeAsync("ConsultaCreditoSteward", New Object() {empresa, cliente, monto}, Me.ConsultaCreditoStewardOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaCreditoStewardOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaCreditoStewardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaCreditoStewardCompleted(Me, New ConsultaCreditoStewardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ConsultaTerminosDePago", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaTerminosDePago(ByVal tipo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaTerminosDePago", New Object() {tipo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaTerminosDePagoAsync(ByVal tipo As String)
            Me.ConsultaTerminosDePagoAsync(tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaTerminosDePagoAsync(ByVal tipo As String, ByVal userState As Object)
            If (Me.ConsultaTerminosDePagoOperationCompleted Is Nothing) Then
                Me.ConsultaTerminosDePagoOperationCompleted = AddressOf Me.OnConsultaTerminosDePagoOperationCompleted
            End If
            Me.InvokeAsync("ConsultaTerminosDePago", New Object() {tipo}, Me.ConsultaTerminosDePagoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaTerminosDePagoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaTerminosDePagoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaTerminosDePagoCompleted(Me, New ConsultaTerminosDePagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/PerfilCliente", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PerfilCliente(ByVal tipo As String, ByVal rut As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("PerfilCliente", New Object() {tipo, rut})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PerfilClienteAsync(ByVal tipo As String, ByVal rut As Integer)
            Me.PerfilClienteAsync(tipo, rut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PerfilClienteAsync(ByVal tipo As String, ByVal rut As Integer, ByVal userState As Object)
            If (Me.PerfilClienteOperationCompleted Is Nothing) Then
                Me.PerfilClienteOperationCompleted = AddressOf Me.OnPerfilClienteOperationCompleted
            End If
            Me.InvokeAsync("PerfilCliente", New Object() {tipo, rut}, Me.PerfilClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnPerfilClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.PerfilClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PerfilClienteCompleted(Me, New PerfilClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/Folios", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Folios(ByVal tipo As String, ByVal empresa As String, ByVal sede As Integer, ByVal ptoventa As Integer, ByVal tipodoc As String, ByVal folio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Folios", New Object() {tipo, empresa, sede, ptoventa, tipodoc, folio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FoliosAsync(ByVal tipo As String, ByVal empresa As String, ByVal sede As Integer, ByVal ptoventa As Integer, ByVal tipodoc As String, ByVal folio As Integer)
            Me.FoliosAsync(tipo, empresa, sede, ptoventa, tipodoc, folio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FoliosAsync(ByVal tipo As String, ByVal empresa As String, ByVal sede As Integer, ByVal ptoventa As Integer, ByVal tipodoc As String, ByVal folio As Integer, ByVal userState As Object)
            If (Me.FoliosOperationCompleted Is Nothing) Then
                Me.FoliosOperationCompleted = AddressOf Me.OnFoliosOperationCompleted
            End If
            Me.InvokeAsync("Folios", New Object() {tipo, empresa, sede, ptoventa, tipodoc, folio}, Me.FoliosOperationCompleted, userState)
        End Sub
        
        Private Sub OnFoliosOperationCompleted(ByVal arg As Object)
            If (Not (Me.FoliosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FoliosCompleted(Me, New FoliosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/Cobranza", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cobranza(ByVal rut As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Cobranza", New Object() {rut})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CobranzaAsync(ByVal rut As String)
            Me.CobranzaAsync(rut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CobranzaAsync(ByVal rut As String, ByVal userState As Object)
            If (Me.CobranzaOperationCompleted Is Nothing) Then
                Me.CobranzaOperationCompleted = AddressOf Me.OnCobranzaOperationCompleted
            End If
            Me.InvokeAsync("Cobranza", New Object() {rut}, Me.CobranzaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCobranzaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CobranzaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CobranzaCompleted(Me, New CobranzaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/Giros", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Giros() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Giros", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GirosAsync()
            Me.GirosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GirosAsync(ByVal userState As Object)
            If (Me.GirosOperationCompleted Is Nothing) Then
                Me.GirosOperationCompleted = AddressOf Me.OnGirosOperationCompleted
            End If
            Me.InvokeAsync("Giros", New Object(-1) {}, Me.GirosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGirosOperationCompleted(ByVal arg As Object)
            If (Not (Me.GirosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GirosCompleted(Me, New GirosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/FiltroClientes", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FiltroClientes(ByVal descripcion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FiltroClientes", New Object() {descripcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FiltroClientesAsync(ByVal descripcion As String)
            Me.FiltroClientesAsync(descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FiltroClientesAsync(ByVal descripcion As String, ByVal userState As Object)
            If (Me.FiltroClientesOperationCompleted Is Nothing) Then
                Me.FiltroClientesOperationCompleted = AddressOf Me.OnFiltroClientesOperationCompleted
            End If
            Me.InvokeAsync("FiltroClientes", New Object() {descripcion}, Me.FiltroClientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnFiltroClientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.FiltroClientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FiltroClientesCompleted(Me, New FiltroClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://steward.cl/wservicesLisaERP/ExistenciaDocumentosPago", RequestNamespace:="http://steward.cl/wservicesLisaERP", ResponseNamespace:="http://steward.cl/wservicesLisaERP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExistenciaDocumentosPago(ByVal codigo As String, ByVal TipoPago As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ExistenciaDocumentosPago", New Object() {codigo, TipoPago})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExistenciaDocumentosPagoAsync(ByVal codigo As String, ByVal TipoPago As String)
            Me.ExistenciaDocumentosPagoAsync(codigo, TipoPago, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExistenciaDocumentosPagoAsync(ByVal codigo As String, ByVal TipoPago As String, ByVal userState As Object)
            If (Me.ExistenciaDocumentosPagoOperationCompleted Is Nothing) Then
                Me.ExistenciaDocumentosPagoOperationCompleted = AddressOf Me.OnExistenciaDocumentosPagoOperationCompleted
            End If
            Me.InvokeAsync("ExistenciaDocumentosPago", New Object() {codigo, TipoPago}, Me.ExistenciaDocumentosPagoOperationCompleted, userState)
        End Sub
        
        Private Sub OnExistenciaDocumentosPagoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExistenciaDocumentosPagoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExistenciaDocumentosPagoCompleted(Me, New ExistenciaDocumentosPagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaStockCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaStockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaStockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaListaPrecioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaListaPrecioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaListaPrecioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub AgregaDireccion888CompletedEventHandler(ByVal sender As Object, ByVal e As AgregaDireccion888CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AgregaDireccion888CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub AgregaDireccionCompletedEventHandler(ByVal sender As Object, ByVal e As AgregaDireccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AgregaDireccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub AgregaContactoCompletedEventHandler(ByVal sender As Object, ByVal e As AgregaContactoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AgregaContactoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub AgregaClienteCompletedEventHandler(ByVal sender As Object, ByVal e As AgregaClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AgregaClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaClienteCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaEstadoPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaEstadoPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaEstadoPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaEstadoClienteCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaEstadoClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaEstadoClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaMontoFleteLisaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaMontoFleteLisaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaMontoFleteLisaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaEjecutivoVentasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaEjecutivoVentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaEjecutivoVentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub UpdateClienteCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub UpdateDireccionCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateDireccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateDireccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteDireccionCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDireccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDireccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteContactoCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteContactoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteContactoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetCuadroMandoCompletedEventHandler(ByVal sender As Object, ByVal e As GetCuadroMandoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCuadroMandoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaPosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaPosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaPosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetVenedoresCompletedEventHandler(ByVal sender As Object, ByVal e As GetVenedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVenedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub AutentificacionWOPCompletedEventHandler(ByVal sender As Object, ByVal e As AutentificacionWOPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutentificacionWOPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaProductosFiltradosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaProductosFiltradosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaProductosFiltradosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaCreditoStewardCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaCreditoStewardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaCreditoStewardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultaTerminosDePagoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaTerminosDePagoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaTerminosDePagoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub PerfilClienteCompletedEventHandler(ByVal sender As Object, ByVal e As PerfilClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PerfilClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub FoliosCompletedEventHandler(ByVal sender As Object, ByVal e As FoliosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FoliosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub CobranzaCompletedEventHandler(ByVal sender As Object, ByVal e As CobranzaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CobranzaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GirosCompletedEventHandler(ByVal sender As Object, ByVal e As GirosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GirosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub FiltroClientesCompletedEventHandler(ByVal sender As Object, ByVal e As FiltroClientesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FiltroClientesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ExistenciaDocumentosPagoCompletedEventHandler(ByVal sender As Object, ByVal e As ExistenciaDocumentosPagoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExistenciaDocumentosPagoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
