'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace ws_pos
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="PosSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Pos
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private WPL_PromocionesMktOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_ActividadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_ActualizaCabeceraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_ActualizaDetalleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_ActualizaPagosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_AutentificaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_Autentifica2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_AyudaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_CAJASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_CajerosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_CiudadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_ComunasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_ConciliaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_Consulta_CabeceraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_CorrelativoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_DocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_DocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_Documentos_WopOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_IngresaRespaldoArqueoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_ParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_Parametros_ConfiguracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_RegionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_TipoTarjetasdeCreditoGetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POS_ValidaStockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_AdminCompra_AdminOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_AdminCompra_ArbolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_AdminCompra_CentroCostoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_AdminCompra_CompradorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_AdminCompra_FichaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_AdminCompra_RutEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_Evento_ConsultaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_Evento_InsertaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POW_Evento_Inserta_NuevoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidaRolUsuarioWopOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidaUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WEB_ArbolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WEB_AtributosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WEB_ConsultaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WEB_GirosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WEB_ImagenesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WEB_PasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WEB_UsuariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_ActualizaCabeceraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_ActualizaDetalleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_ActualizaLavanderiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_ActualizaLavanderiaRptOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_ActualizaLavanderiaRptDocOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_LeeParametrosAdminWebOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_ListaCabeceraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_POW_AdminComprasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_POW_EstudiantesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_POW_PromocionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_Sku_AtributosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WPL_ValidaUsuarioAutorizaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WTT_Web_EncuestaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.pos_Steward.My.MySettings.Default.Pos2_ws_pos_POS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event WPL_PromocionesMktCompleted As WPL_PromocionesMktCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_ActividadesCompleted As POS_ActividadesCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_ActualizaCabeceraCompleted As POS_ActualizaCabeceraCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_ActualizaDetalleCompleted As POS_ActualizaDetalleCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_ActualizaPagosCompleted As POS_ActualizaPagosCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_AutentificaCompleted As POS_AutentificaCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_Autentifica2Completed As POS_Autentifica2CompletedEventHandler
        
        '''<remarks/>
        Public Event POS_AyudaCompleted As POS_AyudaCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_CAJASCompleted As POS_CAJASCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_CajerosCompleted As POS_CajerosCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_CiudadesCompleted As POS_CiudadesCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_ComunasCompleted As POS_ComunasCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_ConciliaCompleted As POS_ConciliaCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_Consulta_CabeceraCompleted As POS_Consulta_CabeceraCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_CorrelativoCompleted As POS_CorrelativoCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_DocumentoCompleted As POS_DocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_DocumentosCompleted As POS_DocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_Documentos_WopCompleted As POS_Documentos_WopCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_IngresaRespaldoArqueoCompleted As POS_IngresaRespaldoArqueoCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_ParametrosCompleted As POS_ParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_Parametros_ConfiguracionCompleted As POS_Parametros_ConfiguracionCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_RegionesCompleted As POS_RegionesCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_TipoTarjetasdeCreditoGetCompleted As POS_TipoTarjetasdeCreditoGetCompletedEventHandler
        
        '''<remarks/>
        Public Event POS_ValidaStockCompleted As POS_ValidaStockCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_AdminCompra_AdminCompleted As POW_AdminCompra_AdminCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_AdminCompra_ArbolCompleted As POW_AdminCompra_ArbolCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_AdminCompra_CentroCostoCompleted As POW_AdminCompra_CentroCostoCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_AdminCompra_CompradorCompleted As POW_AdminCompra_CompradorCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_AdminCompra_FichaEmpresaCompleted As POW_AdminCompra_FichaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_AdminCompra_RutEmpresaCompleted As POW_AdminCompra_RutEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_Evento_ConsultaCompleted As POW_Evento_ConsultaCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_Evento_InsertaCompleted As POW_Evento_InsertaCompletedEventHandler
        
        '''<remarks/>
        Public Event POW_Evento_Inserta_NuevoCompleted As POW_Evento_Inserta_NuevoCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidaRolUsuarioWopCompleted As ValidaRolUsuarioWopCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidaUsuarioCompleted As ValidaUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WEB_ArbolCompleted As WEB_ArbolCompletedEventHandler
        
        '''<remarks/>
        Public Event WEB_AtributosCompleted As WEB_AtributosCompletedEventHandler
        
        '''<remarks/>
        Public Event WEB_ConsultaCompleted As WEB_ConsultaCompletedEventHandler
        
        '''<remarks/>
        Public Event WEB_GirosCompleted As WEB_GirosCompletedEventHandler
        
        '''<remarks/>
        Public Event WEB_ImagenesCompleted As WEB_ImagenesCompletedEventHandler
        
        '''<remarks/>
        Public Event WEB_PasswordCompleted As WEB_PasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event WEB_UsuariosCompleted As WEB_UsuariosCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_ActualizaCabeceraCompleted As WPL_ActualizaCabeceraCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_ActualizaDetalleCompleted As WPL_ActualizaDetalleCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_ActualizaLavanderiaCompleted As WPL_ActualizaLavanderiaCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_ActualizaLavanderiaRptCompleted As WPL_ActualizaLavanderiaRptCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_ActualizaLavanderiaRptDocCompleted As WPL_ActualizaLavanderiaRptDocCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_LeeParametrosAdminWebCompleted As WPL_LeeParametrosAdminWebCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_ListaCabeceraCompleted As WPL_ListaCabeceraCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_POW_AdminComprasCompleted As WPL_POW_AdminComprasCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_POW_EstudiantesCompleted As WPL_POW_EstudiantesCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_POW_PromocionesCompleted As WPL_POW_PromocionesCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_Sku_AtributosCompleted As WPL_Sku_AtributosCompletedEventHandler
        
        '''<remarks/>
        Public Event WPL_ValidaUsuarioAutorizaCompleted As WPL_ValidaUsuarioAutorizaCompletedEventHandler
        
        '''<remarks/>
        Public Event WTT_Web_EncuestaCompleted As WTT_Web_EncuestaCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_PromocionesMkt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_PromocionesMkt(ByVal Tipo As String, ByVal Activo As String, ByVal PRM_Id As String, ByVal Vendedor As String, ByVal TipoNV As String, ByVal NotaVenta As String, ByVal Codigo As String, ByVal Nombre As String, ByVal EMail As String, ByVal Fono As String, ByVal SubTipo As String, ByVal Observaciones As String, ByVal USR_Id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_PromocionesMkt", New Object() {Tipo, Activo, PRM_Id, Vendedor, TipoNV, NotaVenta, Codigo, Nombre, EMail, Fono, SubTipo, Observaciones, USR_Id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_PromocionesMktAsync(ByVal Tipo As String, ByVal Activo As String, ByVal PRM_Id As String, ByVal Vendedor As String, ByVal TipoNV As String, ByVal NotaVenta As String, ByVal Codigo As String, ByVal Nombre As String, ByVal EMail As String, ByVal Fono As String, ByVal SubTipo As String, ByVal Observaciones As String, ByVal USR_Id As String)
            Me.WPL_PromocionesMktAsync(Tipo, Activo, PRM_Id, Vendedor, TipoNV, NotaVenta, Codigo, Nombre, EMail, Fono, SubTipo, Observaciones, USR_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_PromocionesMktAsync(ByVal Tipo As String, ByVal Activo As String, ByVal PRM_Id As String, ByVal Vendedor As String, ByVal TipoNV As String, ByVal NotaVenta As String, ByVal Codigo As String, ByVal Nombre As String, ByVal EMail As String, ByVal Fono As String, ByVal SubTipo As String, ByVal Observaciones As String, ByVal USR_Id As String, ByVal userState As Object)
            If (Me.WPL_PromocionesMktOperationCompleted Is Nothing) Then
                Me.WPL_PromocionesMktOperationCompleted = AddressOf Me.OnWPL_PromocionesMktOperationCompleted
            End If
            Me.InvokeAsync("WPL_PromocionesMkt", New Object() {Tipo, Activo, PRM_Id, Vendedor, TipoNV, NotaVenta, Codigo, Nombre, EMail, Fono, SubTipo, Observaciones, USR_Id}, Me.WPL_PromocionesMktOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_PromocionesMktOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_PromocionesMktCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_PromocionesMktCompleted(Me, New WPL_PromocionesMktCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Actividades", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Actividades(ByVal tipo As String, ByVal Codigo As String, ByVal Codigo2 As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Actividades", New Object() {tipo, Codigo, Codigo2})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_ActividadesAsync(ByVal tipo As String, ByVal Codigo As String, ByVal Codigo2 As String)
            Me.POS_ActividadesAsync(tipo, Codigo, Codigo2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_ActividadesAsync(ByVal tipo As String, ByVal Codigo As String, ByVal Codigo2 As String, ByVal userState As Object)
            If (Me.POS_ActividadesOperationCompleted Is Nothing) Then
                Me.POS_ActividadesOperationCompleted = AddressOf Me.OnPOS_ActividadesOperationCompleted
            End If
            Me.InvokeAsync("POS_Actividades", New Object() {tipo, Codigo, Codigo2}, Me.POS_ActividadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_ActividadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_ActividadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_ActividadesCompleted(Me, New POS_ActividadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_ActualizaCabecera", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_ActualizaCabecera( _
                    ByVal Tipo As String,  _
                    ByVal Empresa As String,  _
                    ByVal BodegaLisa As String,  _
                    ByVal CajaLisa As String,  _
                    ByVal TipoDocLisa As String,  _
                    ByVal folio As Integer,  _
                    ByVal Fecha_Emi As String,  _
                    ByVal CodVendedor As String,  _
                    ByVal CodCliente As String,  _
                    ByVal ListaPrecio As String,  _
                    ByVal EST_Id As Integer,  _
                    ByVal USE_Id As Integer,  _
                    ByVal Descuento1 As Single,  _
                    ByVal Descuento2 As Single,  _
                    ByVal Descuento3 As Single,  _
                    ByVal Donacion As Single,  _
                    ByVal TDCREF_Id As Integer,  _
                    ByVal FolioRef As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal UsuarioUlt As Integer,  _
                    ByVal Generada As Integer,  _
                    ByVal preventa As Integer,  _
                    ByVal CodPromo As String,  _
                    ByVal dir_desp As Integer,  _
                    ByVal dir_fact As Integer,  _
                    ByVal cc_id As Integer,  _
                    ByVal ordencompra As String,  _
                    ByVal adm_id As Integer,  _
                    ByVal cli_id As Integer,  _
                    ByVal enlace As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_ActualizaCabecera", New Object() {Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, Fecha_Emi, CodVendedor, CodCliente, ListaPrecio, EST_Id, USE_Id, Descuento1, Descuento2, Descuento3, Donacion, TDCREF_Id, FolioRef, Observaciones, UsuarioUlt, Generada, preventa, CodPromo, dir_desp, dir_fact, cc_id, ordencompra, adm_id, cli_id, enlace})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_ActualizaCabeceraAsync( _
                    ByVal Tipo As String,  _
                    ByVal Empresa As String,  _
                    ByVal BodegaLisa As String,  _
                    ByVal CajaLisa As String,  _
                    ByVal TipoDocLisa As String,  _
                    ByVal folio As Integer,  _
                    ByVal Fecha_Emi As String,  _
                    ByVal CodVendedor As String,  _
                    ByVal CodCliente As String,  _
                    ByVal ListaPrecio As String,  _
                    ByVal EST_Id As Integer,  _
                    ByVal USE_Id As Integer,  _
                    ByVal Descuento1 As Single,  _
                    ByVal Descuento2 As Single,  _
                    ByVal Descuento3 As Single,  _
                    ByVal Donacion As Single,  _
                    ByVal TDCREF_Id As Integer,  _
                    ByVal FolioRef As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal UsuarioUlt As Integer,  _
                    ByVal Generada As Integer,  _
                    ByVal preventa As Integer,  _
                    ByVal CodPromo As String,  _
                    ByVal dir_desp As Integer,  _
                    ByVal dir_fact As Integer,  _
                    ByVal cc_id As Integer,  _
                    ByVal ordencompra As String,  _
                    ByVal adm_id As Integer,  _
                    ByVal cli_id As Integer,  _
                    ByVal enlace As String)
            Me.POS_ActualizaCabeceraAsync(Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, Fecha_Emi, CodVendedor, CodCliente, ListaPrecio, EST_Id, USE_Id, Descuento1, Descuento2, Descuento3, Donacion, TDCREF_Id, FolioRef, Observaciones, UsuarioUlt, Generada, preventa, CodPromo, dir_desp, dir_fact, cc_id, ordencompra, adm_id, cli_id, enlace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_ActualizaCabeceraAsync( _
                    ByVal Tipo As String,  _
                    ByVal Empresa As String,  _
                    ByVal BodegaLisa As String,  _
                    ByVal CajaLisa As String,  _
                    ByVal TipoDocLisa As String,  _
                    ByVal folio As Integer,  _
                    ByVal Fecha_Emi As String,  _
                    ByVal CodVendedor As String,  _
                    ByVal CodCliente As String,  _
                    ByVal ListaPrecio As String,  _
                    ByVal EST_Id As Integer,  _
                    ByVal USE_Id As Integer,  _
                    ByVal Descuento1 As Single,  _
                    ByVal Descuento2 As Single,  _
                    ByVal Descuento3 As Single,  _
                    ByVal Donacion As Single,  _
                    ByVal TDCREF_Id As Integer,  _
                    ByVal FolioRef As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal UsuarioUlt As Integer,  _
                    ByVal Generada As Integer,  _
                    ByVal preventa As Integer,  _
                    ByVal CodPromo As String,  _
                    ByVal dir_desp As Integer,  _
                    ByVal dir_fact As Integer,  _
                    ByVal cc_id As Integer,  _
                    ByVal ordencompra As String,  _
                    ByVal adm_id As Integer,  _
                    ByVal cli_id As Integer,  _
                    ByVal enlace As String,  _
                    ByVal userState As Object)
            If (Me.POS_ActualizaCabeceraOperationCompleted Is Nothing) Then
                Me.POS_ActualizaCabeceraOperationCompleted = AddressOf Me.OnPOS_ActualizaCabeceraOperationCompleted
            End If
            Me.InvokeAsync("POS_ActualizaCabecera", New Object() {Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, Fecha_Emi, CodVendedor, CodCliente, ListaPrecio, EST_Id, USE_Id, Descuento1, Descuento2, Descuento3, Donacion, TDCREF_Id, FolioRef, Observaciones, UsuarioUlt, Generada, preventa, CodPromo, dir_desp, dir_fact, cc_id, ordencompra, adm_id, cli_id, enlace}, Me.POS_ActualizaCabeceraOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_ActualizaCabeceraOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_ActualizaCabeceraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_ActualizaCabeceraCompleted(Me, New POS_ActualizaCabeceraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_ActualizaDetalle", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_ActualizaDetalle(ByVal Tipo As String, ByVal Empresa As String, ByVal BodegaLisa As String, ByVal CajaLisa As String, ByVal TipoDocLisa As String, ByVal folio As Integer, ByVal Sku As String, ByVal UM As String, ByVal Cantidad As Single, ByVal Descuento1 As Single, ByVal Descuento2 As Single, ByVal Descuento3 As Single, ByVal precio As Integer, ByVal CodPromo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_ActualizaDetalle", New Object() {Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, Sku, UM, Cantidad, Descuento1, Descuento2, Descuento3, precio, CodPromo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_ActualizaDetalleAsync(ByVal Tipo As String, ByVal Empresa As String, ByVal BodegaLisa As String, ByVal CajaLisa As String, ByVal TipoDocLisa As String, ByVal folio As Integer, ByVal Sku As String, ByVal UM As String, ByVal Cantidad As Single, ByVal Descuento1 As Single, ByVal Descuento2 As Single, ByVal Descuento3 As Single, ByVal precio As Integer, ByVal CodPromo As String)
            Me.POS_ActualizaDetalleAsync(Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, Sku, UM, Cantidad, Descuento1, Descuento2, Descuento3, precio, CodPromo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_ActualizaDetalleAsync(ByVal Tipo As String, ByVal Empresa As String, ByVal BodegaLisa As String, ByVal CajaLisa As String, ByVal TipoDocLisa As String, ByVal folio As Integer, ByVal Sku As String, ByVal UM As String, ByVal Cantidad As Single, ByVal Descuento1 As Single, ByVal Descuento2 As Single, ByVal Descuento3 As Single, ByVal precio As Integer, ByVal CodPromo As String, ByVal userState As Object)
            If (Me.POS_ActualizaDetalleOperationCompleted Is Nothing) Then
                Me.POS_ActualizaDetalleOperationCompleted = AddressOf Me.OnPOS_ActualizaDetalleOperationCompleted
            End If
            Me.InvokeAsync("POS_ActualizaDetalle", New Object() {Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, Sku, UM, Cantidad, Descuento1, Descuento2, Descuento3, precio, CodPromo}, Me.POS_ActualizaDetalleOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_ActualizaDetalleOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_ActualizaDetalleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_ActualizaDetalleCompleted(Me, New POS_ActualizaDetalleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_ActualizaPagos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_ActualizaPagos( _
                    ByVal Tipo As String,  _
                    ByVal Empresa As String,  _
                    ByVal BodegaLisa As String,  _
                    ByVal CajaLisa As String,  _
                    ByVal TipoDocLisa As String,  _
                    ByVal folio As Integer,  _
                    ByVal nroDocPago As String,  _
                    ByVal TipoMedioPago As String,  _
                    ByVal TTC_Id As Integer,  _
                    ByVal BCO_Id As Integer,  _
                    ByVal PZA_Id As Integer,  _
                    ByVal RutTitular As String,  _
                    ByVal CtaCte As String,  _
                    ByVal NroOperacion As String,  _
                    ByVal NroAutorizacion As String,  _
                    ByVal TotalCuotas As Integer,  _
                    ByVal NroCuota As Integer,  _
                    ByVal FechaCuota As String,  _
                    ByVal valorCuota As Integer,  _
                    ByVal EST_Id As Integer,  _
                    ByVal NombreTitular As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_ActualizaPagos", New Object() {Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, nroDocPago, TipoMedioPago, TTC_Id, BCO_Id, PZA_Id, RutTitular, CtaCte, NroOperacion, NroAutorizacion, TotalCuotas, NroCuota, FechaCuota, valorCuota, EST_Id, NombreTitular})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_ActualizaPagosAsync( _
                    ByVal Tipo As String,  _
                    ByVal Empresa As String,  _
                    ByVal BodegaLisa As String,  _
                    ByVal CajaLisa As String,  _
                    ByVal TipoDocLisa As String,  _
                    ByVal folio As Integer,  _
                    ByVal nroDocPago As String,  _
                    ByVal TipoMedioPago As String,  _
                    ByVal TTC_Id As Integer,  _
                    ByVal BCO_Id As Integer,  _
                    ByVal PZA_Id As Integer,  _
                    ByVal RutTitular As String,  _
                    ByVal CtaCte As String,  _
                    ByVal NroOperacion As String,  _
                    ByVal NroAutorizacion As String,  _
                    ByVal TotalCuotas As Integer,  _
                    ByVal NroCuota As Integer,  _
                    ByVal FechaCuota As String,  _
                    ByVal valorCuota As Integer,  _
                    ByVal EST_Id As Integer,  _
                    ByVal NombreTitular As String)
            Me.POS_ActualizaPagosAsync(Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, nroDocPago, TipoMedioPago, TTC_Id, BCO_Id, PZA_Id, RutTitular, CtaCte, NroOperacion, NroAutorizacion, TotalCuotas, NroCuota, FechaCuota, valorCuota, EST_Id, NombreTitular, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_ActualizaPagosAsync( _
                    ByVal Tipo As String,  _
                    ByVal Empresa As String,  _
                    ByVal BodegaLisa As String,  _
                    ByVal CajaLisa As String,  _
                    ByVal TipoDocLisa As String,  _
                    ByVal folio As Integer,  _
                    ByVal nroDocPago As String,  _
                    ByVal TipoMedioPago As String,  _
                    ByVal TTC_Id As Integer,  _
                    ByVal BCO_Id As Integer,  _
                    ByVal PZA_Id As Integer,  _
                    ByVal RutTitular As String,  _
                    ByVal CtaCte As String,  _
                    ByVal NroOperacion As String,  _
                    ByVal NroAutorizacion As String,  _
                    ByVal TotalCuotas As Integer,  _
                    ByVal NroCuota As Integer,  _
                    ByVal FechaCuota As String,  _
                    ByVal valorCuota As Integer,  _
                    ByVal EST_Id As Integer,  _
                    ByVal NombreTitular As String,  _
                    ByVal userState As Object)
            If (Me.POS_ActualizaPagosOperationCompleted Is Nothing) Then
                Me.POS_ActualizaPagosOperationCompleted = AddressOf Me.OnPOS_ActualizaPagosOperationCompleted
            End If
            Me.InvokeAsync("POS_ActualizaPagos", New Object() {Tipo, Empresa, BodegaLisa, CajaLisa, TipoDocLisa, folio, nroDocPago, TipoMedioPago, TTC_Id, BCO_Id, PZA_Id, RutTitular, CtaCte, NroOperacion, NroAutorizacion, TotalCuotas, NroCuota, FechaCuota, valorCuota, EST_Id, NombreTitular}, Me.POS_ActualizaPagosOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_ActualizaPagosOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_ActualizaPagosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_ActualizaPagosCompleted(Me, New POS_ActualizaPagosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Autentifica", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Autentifica(ByVal Username As String, ByVal Password As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Autentifica", New Object() {Username, Password})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_AutentificaAsync(ByVal Username As String, ByVal Password As String)
            Me.POS_AutentificaAsync(Username, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_AutentificaAsync(ByVal Username As String, ByVal Password As String, ByVal userState As Object)
            If (Me.POS_AutentificaOperationCompleted Is Nothing) Then
                Me.POS_AutentificaOperationCompleted = AddressOf Me.OnPOS_AutentificaOperationCompleted
            End If
            Me.InvokeAsync("POS_Autentifica", New Object() {Username, Password}, Me.POS_AutentificaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_AutentificaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_AutentificaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_AutentificaCompleted(Me, New POS_AutentificaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Autentifica2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Autentifica2(ByVal Username As String, ByVal Password As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Autentifica2", New Object() {Username, Password})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_Autentifica2Async(ByVal Username As String, ByVal Password As String)
            Me.POS_Autentifica2Async(Username, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_Autentifica2Async(ByVal Username As String, ByVal Password As String, ByVal userState As Object)
            If (Me.POS_Autentifica2OperationCompleted Is Nothing) Then
                Me.POS_Autentifica2OperationCompleted = AddressOf Me.OnPOS_Autentifica2OperationCompleted
            End If
            Me.InvokeAsync("POS_Autentifica2", New Object() {Username, Password}, Me.POS_Autentifica2OperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_Autentifica2OperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_Autentifica2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_Autentifica2Completed(Me, New POS_Autentifica2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Ayuda", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Ayuda(ByVal tipo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Ayuda", New Object() {tipo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_AyudaAsync(ByVal tipo As String)
            Me.POS_AyudaAsync(tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_AyudaAsync(ByVal tipo As String, ByVal userState As Object)
            If (Me.POS_AyudaOperationCompleted Is Nothing) Then
                Me.POS_AyudaOperationCompleted = AddressOf Me.OnPOS_AyudaOperationCompleted
            End If
            Me.InvokeAsync("POS_Ayuda", New Object() {tipo}, Me.POS_AyudaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_AyudaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_AyudaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_AyudaCompleted(Me, New POS_AyudaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_CAJAS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_CAJAS(ByVal IdCaja As Integer, ByVal Tipo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_CAJAS", New Object() {IdCaja, Tipo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_CAJASAsync(ByVal IdCaja As Integer, ByVal Tipo As String)
            Me.POS_CAJASAsync(IdCaja, Tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_CAJASAsync(ByVal IdCaja As Integer, ByVal Tipo As String, ByVal userState As Object)
            If (Me.POS_CAJASOperationCompleted Is Nothing) Then
                Me.POS_CAJASOperationCompleted = AddressOf Me.OnPOS_CAJASOperationCompleted
            End If
            Me.InvokeAsync("POS_CAJAS", New Object() {IdCaja, Tipo}, Me.POS_CAJASOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_CAJASOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_CAJASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_CAJASCompleted(Me, New POS_CAJASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Cajeros", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Cajeros() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Cajeros", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_CajerosAsync()
            Me.POS_CajerosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_CajerosAsync(ByVal userState As Object)
            If (Me.POS_CajerosOperationCompleted Is Nothing) Then
                Me.POS_CajerosOperationCompleted = AddressOf Me.OnPOS_CajerosOperationCompleted
            End If
            Me.InvokeAsync("POS_Cajeros", New Object(-1) {}, Me.POS_CajerosOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_CajerosOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_CajerosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_CajerosCompleted(Me, New POS_CajerosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Ciudades", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Ciudades(ByVal CodigoRegion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Ciudades", New Object() {CodigoRegion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_CiudadesAsync(ByVal CodigoRegion As String)
            Me.POS_CiudadesAsync(CodigoRegion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_CiudadesAsync(ByVal CodigoRegion As String, ByVal userState As Object)
            If (Me.POS_CiudadesOperationCompleted Is Nothing) Then
                Me.POS_CiudadesOperationCompleted = AddressOf Me.OnPOS_CiudadesOperationCompleted
            End If
            Me.InvokeAsync("POS_Ciudades", New Object() {CodigoRegion}, Me.POS_CiudadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_CiudadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_CiudadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_CiudadesCompleted(Me, New POS_CiudadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Comunas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Comunas(ByVal CodigoRegion As String, ByVal CodigoCiudad As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Comunas", New Object() {CodigoRegion, CodigoCiudad})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_ComunasAsync(ByVal CodigoRegion As String, ByVal CodigoCiudad As String)
            Me.POS_ComunasAsync(CodigoRegion, CodigoCiudad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_ComunasAsync(ByVal CodigoRegion As String, ByVal CodigoCiudad As String, ByVal userState As Object)
            If (Me.POS_ComunasOperationCompleted Is Nothing) Then
                Me.POS_ComunasOperationCompleted = AddressOf Me.OnPOS_ComunasOperationCompleted
            End If
            Me.InvokeAsync("POS_Comunas", New Object() {CodigoRegion, CodigoCiudad}, Me.POS_ComunasOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_ComunasOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_ComunasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_ComunasCompleted(Me, New POS_ComunasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Concilia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Concilia(ByVal tipo As String, ByVal fecha1 As String, ByVal Fecha2 As String, ByVal Sede As String, ByVal Caja As String, ByVal Cajero As String, ByVal TipoDoc As String, ByVal MedioPago As String, ByVal NroDoc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Concilia", New Object() {tipo, fecha1, Fecha2, Sede, Caja, Cajero, TipoDoc, MedioPago, NroDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_ConciliaAsync(ByVal tipo As String, ByVal fecha1 As String, ByVal Fecha2 As String, ByVal Sede As String, ByVal Caja As String, ByVal Cajero As String, ByVal TipoDoc As String, ByVal MedioPago As String, ByVal NroDoc As String)
            Me.POS_ConciliaAsync(tipo, fecha1, Fecha2, Sede, Caja, Cajero, TipoDoc, MedioPago, NroDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_ConciliaAsync(ByVal tipo As String, ByVal fecha1 As String, ByVal Fecha2 As String, ByVal Sede As String, ByVal Caja As String, ByVal Cajero As String, ByVal TipoDoc As String, ByVal MedioPago As String, ByVal NroDoc As String, ByVal userState As Object)
            If (Me.POS_ConciliaOperationCompleted Is Nothing) Then
                Me.POS_ConciliaOperationCompleted = AddressOf Me.OnPOS_ConciliaOperationCompleted
            End If
            Me.InvokeAsync("POS_Concilia", New Object() {tipo, fecha1, Fecha2, Sede, Caja, Cajero, TipoDoc, MedioPago, NroDoc}, Me.POS_ConciliaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_ConciliaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_ConciliaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_ConciliaCompleted(Me, New POS_ConciliaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Consulta_Cabecera", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Consulta_Cabecera(ByVal tipo As String, ByVal cab_id As Integer, ByVal est_id As Integer, ByVal bodegalisa As String, ByVal cajalisa As String, ByVal tipodoclisa As String, ByVal folio As Integer, ByVal codcliente As String, ByVal use_id As Integer, ByVal adm_id As Integer, ByVal ano As Integer, ByVal mes As Integer, ByVal CodVendedor As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Consulta_Cabecera", New Object() {tipo, cab_id, est_id, bodegalisa, cajalisa, tipodoclisa, folio, codcliente, use_id, adm_id, ano, mes, CodVendedor})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_Consulta_CabeceraAsync(ByVal tipo As String, ByVal cab_id As Integer, ByVal est_id As Integer, ByVal bodegalisa As String, ByVal cajalisa As String, ByVal tipodoclisa As String, ByVal folio As Integer, ByVal codcliente As String, ByVal use_id As Integer, ByVal adm_id As Integer, ByVal ano As Integer, ByVal mes As Integer, ByVal CodVendedor As String)
            Me.POS_Consulta_CabeceraAsync(tipo, cab_id, est_id, bodegalisa, cajalisa, tipodoclisa, folio, codcliente, use_id, adm_id, ano, mes, CodVendedor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_Consulta_CabeceraAsync(ByVal tipo As String, ByVal cab_id As Integer, ByVal est_id As Integer, ByVal bodegalisa As String, ByVal cajalisa As String, ByVal tipodoclisa As String, ByVal folio As Integer, ByVal codcliente As String, ByVal use_id As Integer, ByVal adm_id As Integer, ByVal ano As Integer, ByVal mes As Integer, ByVal CodVendedor As String, ByVal userState As Object)
            If (Me.POS_Consulta_CabeceraOperationCompleted Is Nothing) Then
                Me.POS_Consulta_CabeceraOperationCompleted = AddressOf Me.OnPOS_Consulta_CabeceraOperationCompleted
            End If
            Me.InvokeAsync("POS_Consulta_Cabecera", New Object() {tipo, cab_id, est_id, bodegalisa, cajalisa, tipodoclisa, folio, codcliente, use_id, adm_id, ano, mes, CodVendedor}, Me.POS_Consulta_CabeceraOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_Consulta_CabeceraOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_Consulta_CabeceraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_Consulta_CabeceraCompleted(Me, New POS_Consulta_CabeceraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Correlativo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Correlativo(ByVal TipoDocumento As String) As String
            Dim results() As Object = Me.Invoke("POS_Correlativo", New Object() {TipoDocumento})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_CorrelativoAsync(ByVal TipoDocumento As String)
            Me.POS_CorrelativoAsync(TipoDocumento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_CorrelativoAsync(ByVal TipoDocumento As String, ByVal userState As Object)
            If (Me.POS_CorrelativoOperationCompleted Is Nothing) Then
                Me.POS_CorrelativoOperationCompleted = AddressOf Me.OnPOS_CorrelativoOperationCompleted
            End If
            Me.InvokeAsync("POS_Correlativo", New Object() {TipoDocumento}, Me.POS_CorrelativoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_CorrelativoOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_CorrelativoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_CorrelativoCompleted(Me, New POS_CorrelativoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Documento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Documento(ByVal tipoOperacion As String, ByVal Fecha As Date, ByVal documento As String, ByVal estado As Integer, ByVal razon As String, ByVal tipoDocumento As String, ByVal docXML As String, ByVal generada As Integer, ByVal sede As Integer, ByVal caja As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Documento", New Object() {tipoOperacion, Fecha, documento, estado, razon, tipoDocumento, docXML, generada, sede, caja})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_DocumentoAsync(ByVal tipoOperacion As String, ByVal Fecha As Date, ByVal documento As String, ByVal estado As Integer, ByVal razon As String, ByVal tipoDocumento As String, ByVal docXML As String, ByVal generada As Integer, ByVal sede As Integer, ByVal caja As Integer)
            Me.POS_DocumentoAsync(tipoOperacion, Fecha, documento, estado, razon, tipoDocumento, docXML, generada, sede, caja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_DocumentoAsync(ByVal tipoOperacion As String, ByVal Fecha As Date, ByVal documento As String, ByVal estado As Integer, ByVal razon As String, ByVal tipoDocumento As String, ByVal docXML As String, ByVal generada As Integer, ByVal sede As Integer, ByVal caja As Integer, ByVal userState As Object)
            If (Me.POS_DocumentoOperationCompleted Is Nothing) Then
                Me.POS_DocumentoOperationCompleted = AddressOf Me.OnPOS_DocumentoOperationCompleted
            End If
            Me.InvokeAsync("POS_Documento", New Object() {tipoOperacion, Fecha, documento, estado, razon, tipoDocumento, docXML, generada, sede, caja}, Me.POS_DocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_DocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_DocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_DocumentoCompleted(Me, New POS_DocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Documentos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Documentos(ByVal tipo As String, ByVal nro As Integer, ByVal tipoDoc As String, ByVal Fecha As Date, ByVal xml As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Documentos", New Object() {tipo, nro, tipoDoc, Fecha, xml})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_DocumentosAsync(ByVal tipo As String, ByVal nro As Integer, ByVal tipoDoc As String, ByVal Fecha As Date, ByVal xml As String)
            Me.POS_DocumentosAsync(tipo, nro, tipoDoc, Fecha, xml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_DocumentosAsync(ByVal tipo As String, ByVal nro As Integer, ByVal tipoDoc As String, ByVal Fecha As Date, ByVal xml As String, ByVal userState As Object)
            If (Me.POS_DocumentosOperationCompleted Is Nothing) Then
                Me.POS_DocumentosOperationCompleted = AddressOf Me.OnPOS_DocumentosOperationCompleted
            End If
            Me.InvokeAsync("POS_Documentos", New Object() {tipo, nro, tipoDoc, Fecha, xml}, Me.POS_DocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_DocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_DocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_DocumentosCompleted(Me, New POS_DocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Documentos_Wop", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Documentos_Wop(ByVal tipo As String, ByVal Cab_ID As Integer, ByVal Est_id As Integer, ByVal BodegaLisa As String, ByVal CajaLisa As String, ByVal TipoDocLisa As String, ByVal folio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Documentos_Wop", New Object() {tipo, Cab_ID, Est_id, BodegaLisa, CajaLisa, TipoDocLisa, folio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_Documentos_WopAsync(ByVal tipo As String, ByVal Cab_ID As Integer, ByVal Est_id As Integer, ByVal BodegaLisa As String, ByVal CajaLisa As String, ByVal TipoDocLisa As String, ByVal folio As Integer)
            Me.POS_Documentos_WopAsync(tipo, Cab_ID, Est_id, BodegaLisa, CajaLisa, TipoDocLisa, folio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_Documentos_WopAsync(ByVal tipo As String, ByVal Cab_ID As Integer, ByVal Est_id As Integer, ByVal BodegaLisa As String, ByVal CajaLisa As String, ByVal TipoDocLisa As String, ByVal folio As Integer, ByVal userState As Object)
            If (Me.POS_Documentos_WopOperationCompleted Is Nothing) Then
                Me.POS_Documentos_WopOperationCompleted = AddressOf Me.OnPOS_Documentos_WopOperationCompleted
            End If
            Me.InvokeAsync("POS_Documentos_Wop", New Object() {tipo, Cab_ID, Est_id, BodegaLisa, CajaLisa, TipoDocLisa, folio}, Me.POS_Documentos_WopOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_Documentos_WopOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_Documentos_WopCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_Documentos_WopCompleted(Me, New POS_Documentos_WopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_IngresaRespaldoArqueo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_IngresaRespaldoArqueo(ByVal Fecha As Date, ByVal sede As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_IngresaRespaldoArqueo", New Object() {Fecha, sede})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_IngresaRespaldoArqueoAsync(ByVal Fecha As Date, ByVal sede As Integer)
            Me.POS_IngresaRespaldoArqueoAsync(Fecha, sede, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_IngresaRespaldoArqueoAsync(ByVal Fecha As Date, ByVal sede As Integer, ByVal userState As Object)
            If (Me.POS_IngresaRespaldoArqueoOperationCompleted Is Nothing) Then
                Me.POS_IngresaRespaldoArqueoOperationCompleted = AddressOf Me.OnPOS_IngresaRespaldoArqueoOperationCompleted
            End If
            Me.InvokeAsync("POS_IngresaRespaldoArqueo", New Object() {Fecha, sede}, Me.POS_IngresaRespaldoArqueoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_IngresaRespaldoArqueoOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_IngresaRespaldoArqueoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_IngresaRespaldoArqueoCompleted(Me, New POS_IngresaRespaldoArqueoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Parametros", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Parametros(ByVal parametro1 As String, ByVal parametro2 As String, ByVal parametro3 As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Parametros", New Object() {parametro1, parametro2, parametro3})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_ParametrosAsync(ByVal parametro1 As String, ByVal parametro2 As String, ByVal parametro3 As String)
            Me.POS_ParametrosAsync(parametro1, parametro2, parametro3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_ParametrosAsync(ByVal parametro1 As String, ByVal parametro2 As String, ByVal parametro3 As String, ByVal userState As Object)
            If (Me.POS_ParametrosOperationCompleted Is Nothing) Then
                Me.POS_ParametrosOperationCompleted = AddressOf Me.OnPOS_ParametrosOperationCompleted
            End If
            Me.InvokeAsync("POS_Parametros", New Object() {parametro1, parametro2, parametro3}, Me.POS_ParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_ParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_ParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_ParametrosCompleted(Me, New POS_ParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Parametros_Configuracion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Parametros_Configuracion(ByVal parametro As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Parametros_Configuracion", New Object() {parametro})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_Parametros_ConfiguracionAsync(ByVal parametro As String)
            Me.POS_Parametros_ConfiguracionAsync(parametro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_Parametros_ConfiguracionAsync(ByVal parametro As String, ByVal userState As Object)
            If (Me.POS_Parametros_ConfiguracionOperationCompleted Is Nothing) Then
                Me.POS_Parametros_ConfiguracionOperationCompleted = AddressOf Me.OnPOS_Parametros_ConfiguracionOperationCompleted
            End If
            Me.InvokeAsync("POS_Parametros_Configuracion", New Object() {parametro}, Me.POS_Parametros_ConfiguracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_Parametros_ConfiguracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_Parametros_ConfiguracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_Parametros_ConfiguracionCompleted(Me, New POS_Parametros_ConfiguracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_Regiones", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_Regiones() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_Regiones", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_RegionesAsync()
            Me.POS_RegionesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_RegionesAsync(ByVal userState As Object)
            If (Me.POS_RegionesOperationCompleted Is Nothing) Then
                Me.POS_RegionesOperationCompleted = AddressOf Me.OnPOS_RegionesOperationCompleted
            End If
            Me.InvokeAsync("POS_Regiones", New Object(-1) {}, Me.POS_RegionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_RegionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_RegionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_RegionesCompleted(Me, New POS_RegionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_TipoTarjetasdeCreditoGet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_TipoTarjetasdeCreditoGet() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_TipoTarjetasdeCreditoGet", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_TipoTarjetasdeCreditoGetAsync()
            Me.POS_TipoTarjetasdeCreditoGetAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_TipoTarjetasdeCreditoGetAsync(ByVal userState As Object)
            If (Me.POS_TipoTarjetasdeCreditoGetOperationCompleted Is Nothing) Then
                Me.POS_TipoTarjetasdeCreditoGetOperationCompleted = AddressOf Me.OnPOS_TipoTarjetasdeCreditoGetOperationCompleted
            End If
            Me.InvokeAsync("POS_TipoTarjetasdeCreditoGet", New Object(-1) {}, Me.POS_TipoTarjetasdeCreditoGetOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_TipoTarjetasdeCreditoGetOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_TipoTarjetasdeCreditoGetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_TipoTarjetasdeCreditoGetCompleted(Me, New POS_TipoTarjetasdeCreditoGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POS_ValidaStock", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POS_ValidaStock(ByVal bodega As String, ByVal PuntoFacturacion As String, ByVal Usuario As String, ByVal sku As String, ByVal Cantidad As Integer, ByVal TipoDoc As String, ByVal FolioDoc As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POS_ValidaStock", New Object() {bodega, PuntoFacturacion, Usuario, sku, Cantidad, TipoDoc, FolioDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POS_ValidaStockAsync(ByVal bodega As String, ByVal PuntoFacturacion As String, ByVal Usuario As String, ByVal sku As String, ByVal Cantidad As Integer, ByVal TipoDoc As String, ByVal FolioDoc As Integer)
            Me.POS_ValidaStockAsync(bodega, PuntoFacturacion, Usuario, sku, Cantidad, TipoDoc, FolioDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POS_ValidaStockAsync(ByVal bodega As String, ByVal PuntoFacturacion As String, ByVal Usuario As String, ByVal sku As String, ByVal Cantidad As Integer, ByVal TipoDoc As String, ByVal FolioDoc As Integer, ByVal userState As Object)
            If (Me.POS_ValidaStockOperationCompleted Is Nothing) Then
                Me.POS_ValidaStockOperationCompleted = AddressOf Me.OnPOS_ValidaStockOperationCompleted
            End If
            Me.InvokeAsync("POS_ValidaStock", New Object() {bodega, PuntoFacturacion, Usuario, sku, Cantidad, TipoDoc, FolioDoc}, Me.POS_ValidaStockOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOS_ValidaStockOperationCompleted(ByVal arg As Object)
            If (Not (Me.POS_ValidaStockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POS_ValidaStockCompleted(Me, New POS_ValidaStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_AdminCompra_Admin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POW_AdminCompra_Admin(ByVal idPersona As Integer) As Integer
            Dim results() As Object = Me.Invoke("POW_AdminCompra_Admin", New Object() {idPersona})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_AdminAsync(ByVal idPersona As Integer)
            Me.POW_AdminCompra_AdminAsync(idPersona, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_AdminAsync(ByVal idPersona As Integer, ByVal userState As Object)
            If (Me.POW_AdminCompra_AdminOperationCompleted Is Nothing) Then
                Me.POW_AdminCompra_AdminOperationCompleted = AddressOf Me.OnPOW_AdminCompra_AdminOperationCompleted
            End If
            Me.InvokeAsync("POW_AdminCompra_Admin", New Object() {idPersona}, Me.POW_AdminCompra_AdminOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_AdminCompra_AdminOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_AdminCompra_AdminCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_AdminCompra_AdminCompleted(Me, New POW_AdminCompra_AdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_AdminCompra_Arbol", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POW_AdminCompra_Arbol( _
                    ByVal tipo As String,  _
                    ByVal Stock As Char,  _
                    ByVal Disponible As String,  _
                    ByVal Empresa As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NroSkus As Integer,  _
                    ByVal Tie_Id As Integer,  _
                    ByVal Arbol As String,  _
                    ByVal ArbolNivel As Integer,  _
                    ByVal MbArtNom As String,  _
                    ByVal MbFamCod As String,  _
                    ByVal MbClaCod As String,  _
                    ByVal MbMerCod As String,  _
                    ByVal MbGrpCod As String,  _
                    ByVal PRF_Id As String,  _
                    ByVal Bodega As String,  _
                    ByVal BusquedaExacta As String,  _
                    ByVal CodPromo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POW_AdminCompra_Arbol", New Object() {tipo, Stock, Disponible, Empresa, Prefijo, NroSkus, Tie_Id, Arbol, ArbolNivel, MbArtNom, MbFamCod, MbClaCod, MbMerCod, MbGrpCod, PRF_Id, Bodega, BusquedaExacta, CodPromo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_ArbolAsync( _
                    ByVal tipo As String,  _
                    ByVal Stock As Char,  _
                    ByVal Disponible As String,  _
                    ByVal Empresa As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NroSkus As Integer,  _
                    ByVal Tie_Id As Integer,  _
                    ByVal Arbol As String,  _
                    ByVal ArbolNivel As Integer,  _
                    ByVal MbArtNom As String,  _
                    ByVal MbFamCod As String,  _
                    ByVal MbClaCod As String,  _
                    ByVal MbMerCod As String,  _
                    ByVal MbGrpCod As String,  _
                    ByVal PRF_Id As String,  _
                    ByVal Bodega As String,  _
                    ByVal BusquedaExacta As String,  _
                    ByVal CodPromo As String)
            Me.POW_AdminCompra_ArbolAsync(tipo, Stock, Disponible, Empresa, Prefijo, NroSkus, Tie_Id, Arbol, ArbolNivel, MbArtNom, MbFamCod, MbClaCod, MbMerCod, MbGrpCod, PRF_Id, Bodega, BusquedaExacta, CodPromo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_ArbolAsync( _
                    ByVal tipo As String,  _
                    ByVal Stock As Char,  _
                    ByVal Disponible As String,  _
                    ByVal Empresa As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NroSkus As Integer,  _
                    ByVal Tie_Id As Integer,  _
                    ByVal Arbol As String,  _
                    ByVal ArbolNivel As Integer,  _
                    ByVal MbArtNom As String,  _
                    ByVal MbFamCod As String,  _
                    ByVal MbClaCod As String,  _
                    ByVal MbMerCod As String,  _
                    ByVal MbGrpCod As String,  _
                    ByVal PRF_Id As String,  _
                    ByVal Bodega As String,  _
                    ByVal BusquedaExacta As String,  _
                    ByVal CodPromo As String,  _
                    ByVal userState As Object)
            If (Me.POW_AdminCompra_ArbolOperationCompleted Is Nothing) Then
                Me.POW_AdminCompra_ArbolOperationCompleted = AddressOf Me.OnPOW_AdminCompra_ArbolOperationCompleted
            End If
            Me.InvokeAsync("POW_AdminCompra_Arbol", New Object() {tipo, Stock, Disponible, Empresa, Prefijo, NroSkus, Tie_Id, Arbol, ArbolNivel, MbArtNom, MbFamCod, MbClaCod, MbMerCod, MbGrpCod, PRF_Id, Bodega, BusquedaExacta, CodPromo}, Me.POW_AdminCompra_ArbolOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_AdminCompra_ArbolOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_AdminCompra_ArbolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_AdminCompra_ArbolCompleted(Me, New POW_AdminCompra_ArbolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_AdminCompra_CentroCosto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POW_AdminCompra_CentroCosto(ByVal tipo As String, ByVal empresa As String, ByVal tie_id As Integer, ByVal emp_id As Integer, ByVal adm_id As Integer, ByVal usr_id As Integer, ByVal atr_cli_id As Integer, ByVal dir_desp As Integer, ByVal dir_fact As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POW_AdminCompra_CentroCosto", New Object() {tipo, empresa, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_CentroCostoAsync(ByVal tipo As String, ByVal empresa As String, ByVal tie_id As Integer, ByVal emp_id As Integer, ByVal adm_id As Integer, ByVal usr_id As Integer, ByVal atr_cli_id As Integer, ByVal dir_desp As Integer, ByVal dir_fact As Integer)
            Me.POW_AdminCompra_CentroCostoAsync(tipo, empresa, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_CentroCostoAsync(ByVal tipo As String, ByVal empresa As String, ByVal tie_id As Integer, ByVal emp_id As Integer, ByVal adm_id As Integer, ByVal usr_id As Integer, ByVal atr_cli_id As Integer, ByVal dir_desp As Integer, ByVal dir_fact As Integer, ByVal userState As Object)
            If (Me.POW_AdminCompra_CentroCostoOperationCompleted Is Nothing) Then
                Me.POW_AdminCompra_CentroCostoOperationCompleted = AddressOf Me.OnPOW_AdminCompra_CentroCostoOperationCompleted
            End If
            Me.InvokeAsync("POW_AdminCompra_CentroCosto", New Object() {tipo, empresa, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact}, Me.POW_AdminCompra_CentroCostoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_AdminCompra_CentroCostoOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_AdminCompra_CentroCostoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_AdminCompra_CentroCostoCompleted(Me, New POW_AdminCompra_CentroCostoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_AdminCompra_Comprador", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POW_AdminCompra_Comprador(ByVal idPersona As Integer) As String
            Dim results() As Object = Me.Invoke("POW_AdminCompra_Comprador", New Object() {idPersona})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_CompradorAsync(ByVal idPersona As Integer)
            Me.POW_AdminCompra_CompradorAsync(idPersona, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_CompradorAsync(ByVal idPersona As Integer, ByVal userState As Object)
            If (Me.POW_AdminCompra_CompradorOperationCompleted Is Nothing) Then
                Me.POW_AdminCompra_CompradorOperationCompleted = AddressOf Me.OnPOW_AdminCompra_CompradorOperationCompleted
            End If
            Me.InvokeAsync("POW_AdminCompra_Comprador", New Object() {idPersona}, Me.POW_AdminCompra_CompradorOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_AdminCompra_CompradorOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_AdminCompra_CompradorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_AdminCompra_CompradorCompleted(Me, New POW_AdminCompra_CompradorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_AdminCompra_FichaEmpresa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POW_AdminCompra_FichaEmpresa(ByVal tipo As String, ByVal empresa As String, ByVal codempresa As String, ByVal tie_id As Integer, ByVal emp_id As Integer, ByVal adm_id As Integer, ByVal usr_id As Integer, ByVal atr_cli_id As Integer, ByVal dir_desp As Integer, ByVal dir_fact As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("POW_AdminCompra_FichaEmpresa", New Object() {tipo, empresa, codempresa, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_FichaEmpresaAsync(ByVal tipo As String, ByVal empresa As String, ByVal codempresa As String, ByVal tie_id As Integer, ByVal emp_id As Integer, ByVal adm_id As Integer, ByVal usr_id As Integer, ByVal atr_cli_id As Integer, ByVal dir_desp As Integer, ByVal dir_fact As Integer)
            Me.POW_AdminCompra_FichaEmpresaAsync(tipo, empresa, codempresa, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_FichaEmpresaAsync(ByVal tipo As String, ByVal empresa As String, ByVal codempresa As String, ByVal tie_id As Integer, ByVal emp_id As Integer, ByVal adm_id As Integer, ByVal usr_id As Integer, ByVal atr_cli_id As Integer, ByVal dir_desp As Integer, ByVal dir_fact As Integer, ByVal userState As Object)
            If (Me.POW_AdminCompra_FichaEmpresaOperationCompleted Is Nothing) Then
                Me.POW_AdminCompra_FichaEmpresaOperationCompleted = AddressOf Me.OnPOW_AdminCompra_FichaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("POW_AdminCompra_FichaEmpresa", New Object() {tipo, empresa, codempresa, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact}, Me.POW_AdminCompra_FichaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_AdminCompra_FichaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_AdminCompra_FichaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_AdminCompra_FichaEmpresaCompleted(Me, New POW_AdminCompra_FichaEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_AdminCompra_RutEmpresa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POW_AdminCompra_RutEmpresa(ByVal idEmpresa As Integer) As String
            Dim results() As Object = Me.Invoke("POW_AdminCompra_RutEmpresa", New Object() {idEmpresa})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_RutEmpresaAsync(ByVal idEmpresa As Integer)
            Me.POW_AdminCompra_RutEmpresaAsync(idEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_AdminCompra_RutEmpresaAsync(ByVal idEmpresa As Integer, ByVal userState As Object)
            If (Me.POW_AdminCompra_RutEmpresaOperationCompleted Is Nothing) Then
                Me.POW_AdminCompra_RutEmpresaOperationCompleted = AddressOf Me.OnPOW_AdminCompra_RutEmpresaOperationCompleted
            End If
            Me.InvokeAsync("POW_AdminCompra_RutEmpresa", New Object() {idEmpresa}, Me.POW_AdminCompra_RutEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_AdminCompra_RutEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_AdminCompra_RutEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_AdminCompra_RutEmpresaCompleted(Me, New POW_AdminCompra_RutEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_Evento_Consulta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function POW_Evento_Consulta(ByVal email As String) As Boolean
            Dim results() As Object = Me.Invoke("POW_Evento_Consulta", New Object() {email})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub POW_Evento_ConsultaAsync(ByVal email As String)
            Me.POW_Evento_ConsultaAsync(email, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_Evento_ConsultaAsync(ByVal email As String, ByVal userState As Object)
            If (Me.POW_Evento_ConsultaOperationCompleted Is Nothing) Then
                Me.POW_Evento_ConsultaOperationCompleted = AddressOf Me.OnPOW_Evento_ConsultaOperationCompleted
            End If
            Me.InvokeAsync("POW_Evento_Consulta", New Object() {email}, Me.POW_Evento_ConsultaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_Evento_ConsultaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_Evento_ConsultaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_Evento_ConsultaCompleted(Me, New POW_Evento_ConsultaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_Evento_Inserta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POW_Evento_Inserta(ByVal nombre As String, ByVal email As String, ByVal escuela As String, ByVal carrera As String, ByVal ano As String, ByVal idevento As String)
            Me.Invoke("POW_Evento_Inserta", New Object() {nombre, email, escuela, carrera, ano, idevento})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_Evento_InsertaAsync(ByVal nombre As String, ByVal email As String, ByVal escuela As String, ByVal carrera As String, ByVal ano As String, ByVal idevento As String)
            Me.POW_Evento_InsertaAsync(nombre, email, escuela, carrera, ano, idevento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_Evento_InsertaAsync(ByVal nombre As String, ByVal email As String, ByVal escuela As String, ByVal carrera As String, ByVal ano As String, ByVal idevento As String, ByVal userState As Object)
            If (Me.POW_Evento_InsertaOperationCompleted Is Nothing) Then
                Me.POW_Evento_InsertaOperationCompleted = AddressOf Me.OnPOW_Evento_InsertaOperationCompleted
            End If
            Me.InvokeAsync("POW_Evento_Inserta", New Object() {nombre, email, escuela, carrera, ano, idevento}, Me.POW_Evento_InsertaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_Evento_InsertaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_Evento_InsertaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_Evento_InsertaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POW_Evento_Inserta_Nuevo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POW_Evento_Inserta_Nuevo(ByVal nombre As String, ByVal email As String, ByVal empresa As String, ByVal cargo As String, ByVal rubro As String, ByVal fono As String, ByVal idevento As String)
            Me.Invoke("POW_Evento_Inserta_Nuevo", New Object() {nombre, email, empresa, cargo, rubro, fono, idevento})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_Evento_Inserta_NuevoAsync(ByVal nombre As String, ByVal email As String, ByVal empresa As String, ByVal cargo As String, ByVal rubro As String, ByVal fono As String, ByVal idevento As String)
            Me.POW_Evento_Inserta_NuevoAsync(nombre, email, empresa, cargo, rubro, fono, idevento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POW_Evento_Inserta_NuevoAsync(ByVal nombre As String, ByVal email As String, ByVal empresa As String, ByVal cargo As String, ByVal rubro As String, ByVal fono As String, ByVal idevento As String, ByVal userState As Object)
            If (Me.POW_Evento_Inserta_NuevoOperationCompleted Is Nothing) Then
                Me.POW_Evento_Inserta_NuevoOperationCompleted = AddressOf Me.OnPOW_Evento_Inserta_NuevoOperationCompleted
            End If
            Me.InvokeAsync("POW_Evento_Inserta_Nuevo", New Object() {nombre, email, empresa, cargo, rubro, fono, idevento}, Me.POW_Evento_Inserta_NuevoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOW_Evento_Inserta_NuevoOperationCompleted(ByVal arg As Object)
            If (Not (Me.POW_Evento_Inserta_NuevoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POW_Evento_Inserta_NuevoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidaRolUsuarioWop", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaRolUsuarioWop(ByVal Usuario As String, ByVal Rol_Id As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ValidaRolUsuarioWop", New Object() {Usuario, Rol_Id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaRolUsuarioWopAsync(ByVal Usuario As String, ByVal Rol_Id As Integer)
            Me.ValidaRolUsuarioWopAsync(Usuario, Rol_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaRolUsuarioWopAsync(ByVal Usuario As String, ByVal Rol_Id As Integer, ByVal userState As Object)
            If (Me.ValidaRolUsuarioWopOperationCompleted Is Nothing) Then
                Me.ValidaRolUsuarioWopOperationCompleted = AddressOf Me.OnValidaRolUsuarioWopOperationCompleted
            End If
            Me.InvokeAsync("ValidaRolUsuarioWop", New Object() {Usuario, Rol_Id}, Me.ValidaRolUsuarioWopOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaRolUsuarioWopOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaRolUsuarioWopCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaRolUsuarioWopCompleted(Me, New ValidaRolUsuarioWopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidaUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaUsuario(ByVal Usuario As String, ByVal Password As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ValidaUsuario", New Object() {Usuario, Password})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaUsuarioAsync(ByVal Usuario As String, ByVal Password As String)
            Me.ValidaUsuarioAsync(Usuario, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaUsuarioAsync(ByVal Usuario As String, ByVal Password As String, ByVal userState As Object)
            If (Me.ValidaUsuarioOperationCompleted Is Nothing) Then
                Me.ValidaUsuarioOperationCompleted = AddressOf Me.OnValidaUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ValidaUsuario", New Object() {Usuario, Password}, Me.ValidaUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaUsuarioCompleted(Me, New ValidaUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WEB_Arbol", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WEB_Arbol(ByVal tipo As String, ByVal TIE_Id As String, ByVal Arbol As String, ByVal Nivel As Integer, ByVal CodCliente As String, ByVal Sku As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WEB_Arbol", New Object() {tipo, TIE_Id, Arbol, Nivel, CodCliente, Sku})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WEB_ArbolAsync(ByVal tipo As String, ByVal TIE_Id As String, ByVal Arbol As String, ByVal Nivel As Integer, ByVal CodCliente As String, ByVal Sku As String)
            Me.WEB_ArbolAsync(tipo, TIE_Id, Arbol, Nivel, CodCliente, Sku, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WEB_ArbolAsync(ByVal tipo As String, ByVal TIE_Id As String, ByVal Arbol As String, ByVal Nivel As Integer, ByVal CodCliente As String, ByVal Sku As String, ByVal userState As Object)
            If (Me.WEB_ArbolOperationCompleted Is Nothing) Then
                Me.WEB_ArbolOperationCompleted = AddressOf Me.OnWEB_ArbolOperationCompleted
            End If
            Me.InvokeAsync("WEB_Arbol", New Object() {tipo, TIE_Id, Arbol, Nivel, CodCliente, Sku}, Me.WEB_ArbolOperationCompleted, userState)
        End Sub
        
        Private Sub OnWEB_ArbolOperationCompleted(ByVal arg As Object)
            If (Not (Me.WEB_ArbolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WEB_ArbolCompleted(Me, New WEB_ArbolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WEB_Atributos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WEB_Atributos( _
                    ByVal tipo As String,  _
                    ByVal Stock As Char,  _
                    ByVal Disponible As String,  _
                    ByVal Empresa As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NroSkus As Integer,  _
                    ByVal Tie_Id As Integer,  _
                    ByVal Arbol As String,  _
                    ByVal ArbolNivel As Integer,  _
                    ByVal MbArtNom As String,  _
                    ByVal MbFamCod As String,  _
                    ByVal MbClaCod As String,  _
                    ByVal MbMerCod As String,  _
                    ByVal MbGrpCod As String,  _
                    ByVal PRF_Id As String,  _
                    ByVal Bodega As String,  _
                    ByVal BusquedaExacta As String,  _
                    ByVal CodPromo As String,  _
                    ByVal codigoEmpre As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WEB_Atributos", New Object() {tipo, Stock, Disponible, Empresa, Prefijo, NroSkus, Tie_Id, Arbol, ArbolNivel, MbArtNom, MbFamCod, MbClaCod, MbMerCod, MbGrpCod, PRF_Id, Bodega, BusquedaExacta, CodPromo, codigoEmpre})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WEB_AtributosAsync( _
                    ByVal tipo As String,  _
                    ByVal Stock As Char,  _
                    ByVal Disponible As String,  _
                    ByVal Empresa As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NroSkus As Integer,  _
                    ByVal Tie_Id As Integer,  _
                    ByVal Arbol As String,  _
                    ByVal ArbolNivel As Integer,  _
                    ByVal MbArtNom As String,  _
                    ByVal MbFamCod As String,  _
                    ByVal MbClaCod As String,  _
                    ByVal MbMerCod As String,  _
                    ByVal MbGrpCod As String,  _
                    ByVal PRF_Id As String,  _
                    ByVal Bodega As String,  _
                    ByVal BusquedaExacta As String,  _
                    ByVal CodPromo As String,  _
                    ByVal codigoEmpre As Integer)
            Me.WEB_AtributosAsync(tipo, Stock, Disponible, Empresa, Prefijo, NroSkus, Tie_Id, Arbol, ArbolNivel, MbArtNom, MbFamCod, MbClaCod, MbMerCod, MbGrpCod, PRF_Id, Bodega, BusquedaExacta, CodPromo, codigoEmpre, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WEB_AtributosAsync( _
                    ByVal tipo As String,  _
                    ByVal Stock As Char,  _
                    ByVal Disponible As String,  _
                    ByVal Empresa As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NroSkus As Integer,  _
                    ByVal Tie_Id As Integer,  _
                    ByVal Arbol As String,  _
                    ByVal ArbolNivel As Integer,  _
                    ByVal MbArtNom As String,  _
                    ByVal MbFamCod As String,  _
                    ByVal MbClaCod As String,  _
                    ByVal MbMerCod As String,  _
                    ByVal MbGrpCod As String,  _
                    ByVal PRF_Id As String,  _
                    ByVal Bodega As String,  _
                    ByVal BusquedaExacta As String,  _
                    ByVal CodPromo As String,  _
                    ByVal codigoEmpre As Integer,  _
                    ByVal userState As Object)
            If (Me.WEB_AtributosOperationCompleted Is Nothing) Then
                Me.WEB_AtributosOperationCompleted = AddressOf Me.OnWEB_AtributosOperationCompleted
            End If
            Me.InvokeAsync("WEB_Atributos", New Object() {tipo, Stock, Disponible, Empresa, Prefijo, NroSkus, Tie_Id, Arbol, ArbolNivel, MbArtNom, MbFamCod, MbClaCod, MbMerCod, MbGrpCod, PRF_Id, Bodega, BusquedaExacta, CodPromo, codigoEmpre}, Me.WEB_AtributosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWEB_AtributosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WEB_AtributosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WEB_AtributosCompleted(Me, New WEB_AtributosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WEB_Consulta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WEB_Consulta(ByVal tipo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WEB_Consulta", New Object() {tipo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WEB_ConsultaAsync(ByVal tipo As String)
            Me.WEB_ConsultaAsync(tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WEB_ConsultaAsync(ByVal tipo As String, ByVal userState As Object)
            If (Me.WEB_ConsultaOperationCompleted Is Nothing) Then
                Me.WEB_ConsultaOperationCompleted = AddressOf Me.OnWEB_ConsultaOperationCompleted
            End If
            Me.InvokeAsync("WEB_Consulta", New Object() {tipo}, Me.WEB_ConsultaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWEB_ConsultaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WEB_ConsultaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WEB_ConsultaCompleted(Me, New WEB_ConsultaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WEB_Giros", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WEB_Giros(ByVal Tipo As String, ByVal CodigoRubro As String, ByVal CodigoSubRubro As String, ByVal CodigoActividad As String, ByVal BuscaCodigo As String, ByVal BuscaNombre As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WEB_Giros", New Object() {Tipo, CodigoRubro, CodigoSubRubro, CodigoActividad, BuscaCodigo, BuscaNombre})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WEB_GirosAsync(ByVal Tipo As String, ByVal CodigoRubro As String, ByVal CodigoSubRubro As String, ByVal CodigoActividad As String, ByVal BuscaCodigo As String, ByVal BuscaNombre As String)
            Me.WEB_GirosAsync(Tipo, CodigoRubro, CodigoSubRubro, CodigoActividad, BuscaCodigo, BuscaNombre, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WEB_GirosAsync(ByVal Tipo As String, ByVal CodigoRubro As String, ByVal CodigoSubRubro As String, ByVal CodigoActividad As String, ByVal BuscaCodigo As String, ByVal BuscaNombre As String, ByVal userState As Object)
            If (Me.WEB_GirosOperationCompleted Is Nothing) Then
                Me.WEB_GirosOperationCompleted = AddressOf Me.OnWEB_GirosOperationCompleted
            End If
            Me.InvokeAsync("WEB_Giros", New Object() {Tipo, CodigoRubro, CodigoSubRubro, CodigoActividad, BuscaCodigo, BuscaNombre}, Me.WEB_GirosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWEB_GirosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WEB_GirosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WEB_GirosCompleted(Me, New WEB_GirosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WEB_Imagenes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WEB_Imagenes(ByVal Tipo As String, ByVal LLave1 As String, ByVal LLave2 As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WEB_Imagenes", New Object() {Tipo, LLave1, LLave2})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WEB_ImagenesAsync(ByVal Tipo As String, ByVal LLave1 As String, ByVal LLave2 As String)
            Me.WEB_ImagenesAsync(Tipo, LLave1, LLave2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WEB_ImagenesAsync(ByVal Tipo As String, ByVal LLave1 As String, ByVal LLave2 As String, ByVal userState As Object)
            If (Me.WEB_ImagenesOperationCompleted Is Nothing) Then
                Me.WEB_ImagenesOperationCompleted = AddressOf Me.OnWEB_ImagenesOperationCompleted
            End If
            Me.InvokeAsync("WEB_Imagenes", New Object() {Tipo, LLave1, LLave2}, Me.WEB_ImagenesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWEB_ImagenesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WEB_ImagenesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WEB_ImagenesCompleted(Me, New WEB_ImagenesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WEB_Password", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WEB_Password(ByVal tipo As String, ByVal Fecha As Date, ByVal rut As String, ByVal Codigo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WEB_Password", New Object() {tipo, Fecha, rut, Codigo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WEB_PasswordAsync(ByVal tipo As String, ByVal Fecha As Date, ByVal rut As String, ByVal Codigo As String)
            Me.WEB_PasswordAsync(tipo, Fecha, rut, Codigo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WEB_PasswordAsync(ByVal tipo As String, ByVal Fecha As Date, ByVal rut As String, ByVal Codigo As String, ByVal userState As Object)
            If (Me.WEB_PasswordOperationCompleted Is Nothing) Then
                Me.WEB_PasswordOperationCompleted = AddressOf Me.OnWEB_PasswordOperationCompleted
            End If
            Me.InvokeAsync("WEB_Password", New Object() {tipo, Fecha, rut, Codigo}, Me.WEB_PasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWEB_PasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WEB_PasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WEB_PasswordCompleted(Me, New WEB_PasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WEB_Usuarios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WEB_Usuarios( _
                    ByVal tipo As String,  _
                    ByVal Rut As String,  _
                    ByVal DV As String,  _
                    ByVal Clave As String,  _
                    ByVal PerfilId As String,  _
                    ByVal RutDepen As String,  _
                    ByVal RutAdministrador As String,  _
                    ByVal Nombre As String,  _
                    ByVal ApePat As String,  _
                    ByVal ApeMat As String,  _
                    ByVal Fantasia As String,  _
                    ByVal Email As String,  _
                    ByVal Telefono As String,  _
                    ByVal Celular As String,  _
                    ByVal Fax As String,  _
                    ByVal SitioWeb As String,  _
                    ByVal EsEmpresa As String,  _
                    ByVal EsFactura As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WEB_Usuarios", New Object() {tipo, Rut, DV, Clave, PerfilId, RutDepen, RutAdministrador, Nombre, ApePat, ApeMat, Fantasia, Email, Telefono, Celular, Fax, SitioWeb, EsEmpresa, EsFactura})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WEB_UsuariosAsync( _
                    ByVal tipo As String,  _
                    ByVal Rut As String,  _
                    ByVal DV As String,  _
                    ByVal Clave As String,  _
                    ByVal PerfilId As String,  _
                    ByVal RutDepen As String,  _
                    ByVal RutAdministrador As String,  _
                    ByVal Nombre As String,  _
                    ByVal ApePat As String,  _
                    ByVal ApeMat As String,  _
                    ByVal Fantasia As String,  _
                    ByVal Email As String,  _
                    ByVal Telefono As String,  _
                    ByVal Celular As String,  _
                    ByVal Fax As String,  _
                    ByVal SitioWeb As String,  _
                    ByVal EsEmpresa As String,  _
                    ByVal EsFactura As String)
            Me.WEB_UsuariosAsync(tipo, Rut, DV, Clave, PerfilId, RutDepen, RutAdministrador, Nombre, ApePat, ApeMat, Fantasia, Email, Telefono, Celular, Fax, SitioWeb, EsEmpresa, EsFactura, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WEB_UsuariosAsync( _
                    ByVal tipo As String,  _
                    ByVal Rut As String,  _
                    ByVal DV As String,  _
                    ByVal Clave As String,  _
                    ByVal PerfilId As String,  _
                    ByVal RutDepen As String,  _
                    ByVal RutAdministrador As String,  _
                    ByVal Nombre As String,  _
                    ByVal ApePat As String,  _
                    ByVal ApeMat As String,  _
                    ByVal Fantasia As String,  _
                    ByVal Email As String,  _
                    ByVal Telefono As String,  _
                    ByVal Celular As String,  _
                    ByVal Fax As String,  _
                    ByVal SitioWeb As String,  _
                    ByVal EsEmpresa As String,  _
                    ByVal EsFactura As String,  _
                    ByVal userState As Object)
            If (Me.WEB_UsuariosOperationCompleted Is Nothing) Then
                Me.WEB_UsuariosOperationCompleted = AddressOf Me.OnWEB_UsuariosOperationCompleted
            End If
            Me.InvokeAsync("WEB_Usuarios", New Object() {tipo, Rut, DV, Clave, PerfilId, RutDepen, RutAdministrador, Nombre, ApePat, ApeMat, Fantasia, Email, Telefono, Celular, Fax, SitioWeb, EsEmpresa, EsFactura}, Me.WEB_UsuariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWEB_UsuariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WEB_UsuariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WEB_UsuariosCompleted(Me, New WEB_UsuariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_ActualizaCabecera", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_ActualizaCabecera( _
                    ByVal Tipo As String,  _
                    ByVal EMP_Id As Integer,  _
                    ByVal TIE_Id As Integer,  _
                    ByVal TIP_Id As Integer,  _
                    ByVal PRC_Id As Integer,  _
                    ByVal CJA_Id As Integer,  _
                    ByVal EST_Id As Integer,  _
                    ByVal EMI_Id As Integer,  _
                    ByVal REC_Id As Integer,  _
                    ByVal CLI_Id As Integer,  _
                    ByVal FOLIO As Integer,  _
                    ByVal CAB_Id As Integer,  _
                    ByVal TCP_Id As Integer,  _
                    ByVal DIR_Id As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal REF_Id As Integer,  _
                    ByVal kg As Integer,  _
                    ByVal FechaRequerida As String,  _
                    ByVal Horario As Integer,  _
                    ByVal DIRF_Id As Integer,  _
                    ByVal CC_Id As Integer,  _
                    ByVal ADM_Id As Integer,  _
                    ByVal USR_Id As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_ActualizaCabecera", New Object() {Tipo, EMP_Id, TIE_Id, TIP_Id, PRC_Id, CJA_Id, EST_Id, EMI_Id, REC_Id, CLI_Id, FOLIO, CAB_Id, TCP_Id, DIR_Id, Observaciones, REF_Id, kg, FechaRequerida, Horario, DIRF_Id, CC_Id, ADM_Id, USR_Id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaCabeceraAsync( _
                    ByVal Tipo As String,  _
                    ByVal EMP_Id As Integer,  _
                    ByVal TIE_Id As Integer,  _
                    ByVal TIP_Id As Integer,  _
                    ByVal PRC_Id As Integer,  _
                    ByVal CJA_Id As Integer,  _
                    ByVal EST_Id As Integer,  _
                    ByVal EMI_Id As Integer,  _
                    ByVal REC_Id As Integer,  _
                    ByVal CLI_Id As Integer,  _
                    ByVal FOLIO As Integer,  _
                    ByVal CAB_Id As Integer,  _
                    ByVal TCP_Id As Integer,  _
                    ByVal DIR_Id As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal REF_Id As Integer,  _
                    ByVal kg As Integer,  _
                    ByVal FechaRequerida As String,  _
                    ByVal Horario As Integer,  _
                    ByVal DIRF_Id As Integer,  _
                    ByVal CC_Id As Integer,  _
                    ByVal ADM_Id As Integer,  _
                    ByVal USR_Id As Integer)
            Me.WPL_ActualizaCabeceraAsync(Tipo, EMP_Id, TIE_Id, TIP_Id, PRC_Id, CJA_Id, EST_Id, EMI_Id, REC_Id, CLI_Id, FOLIO, CAB_Id, TCP_Id, DIR_Id, Observaciones, REF_Id, kg, FechaRequerida, Horario, DIRF_Id, CC_Id, ADM_Id, USR_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaCabeceraAsync( _
                    ByVal Tipo As String,  _
                    ByVal EMP_Id As Integer,  _
                    ByVal TIE_Id As Integer,  _
                    ByVal TIP_Id As Integer,  _
                    ByVal PRC_Id As Integer,  _
                    ByVal CJA_Id As Integer,  _
                    ByVal EST_Id As Integer,  _
                    ByVal EMI_Id As Integer,  _
                    ByVal REC_Id As Integer,  _
                    ByVal CLI_Id As Integer,  _
                    ByVal FOLIO As Integer,  _
                    ByVal CAB_Id As Integer,  _
                    ByVal TCP_Id As Integer,  _
                    ByVal DIR_Id As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal REF_Id As Integer,  _
                    ByVal kg As Integer,  _
                    ByVal FechaRequerida As String,  _
                    ByVal Horario As Integer,  _
                    ByVal DIRF_Id As Integer,  _
                    ByVal CC_Id As Integer,  _
                    ByVal ADM_Id As Integer,  _
                    ByVal USR_Id As Integer,  _
                    ByVal userState As Object)
            If (Me.WPL_ActualizaCabeceraOperationCompleted Is Nothing) Then
                Me.WPL_ActualizaCabeceraOperationCompleted = AddressOf Me.OnWPL_ActualizaCabeceraOperationCompleted
            End If
            Me.InvokeAsync("WPL_ActualizaCabecera", New Object() {Tipo, EMP_Id, TIE_Id, TIP_Id, PRC_Id, CJA_Id, EST_Id, EMI_Id, REC_Id, CLI_Id, FOLIO, CAB_Id, TCP_Id, DIR_Id, Observaciones, REF_Id, kg, FechaRequerida, Horario, DIRF_Id, CC_Id, ADM_Id, USR_Id}, Me.WPL_ActualizaCabeceraOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_ActualizaCabeceraOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_ActualizaCabeceraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_ActualizaCabeceraCompleted(Me, New WPL_ActualizaCabeceraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_ActualizaDetalle", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_ActualizaDetalle(ByVal Tipo As String, ByVal CAB_Id As Integer, ByVal CLI_Id As Integer, ByVal SKU As String, ByVal Cantidad As Integer, ByVal ReferenciaOld As Integer, ByVal Referencia As Integer, ByVal ActBodega As String, ByVal PrecioGuia As Integer, ByVal NetoGuia As Integer, ByVal BrutoGuia As Integer, ByVal NombreSku As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_ActualizaDetalle", New Object() {Tipo, CAB_Id, CLI_Id, SKU, Cantidad, ReferenciaOld, Referencia, ActBodega, PrecioGuia, NetoGuia, BrutoGuia, NombreSku})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaDetalleAsync(ByVal Tipo As String, ByVal CAB_Id As Integer, ByVal CLI_Id As Integer, ByVal SKU As String, ByVal Cantidad As Integer, ByVal ReferenciaOld As Integer, ByVal Referencia As Integer, ByVal ActBodega As String, ByVal PrecioGuia As Integer, ByVal NetoGuia As Integer, ByVal BrutoGuia As Integer, ByVal NombreSku As String)
            Me.WPL_ActualizaDetalleAsync(Tipo, CAB_Id, CLI_Id, SKU, Cantidad, ReferenciaOld, Referencia, ActBodega, PrecioGuia, NetoGuia, BrutoGuia, NombreSku, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaDetalleAsync(ByVal Tipo As String, ByVal CAB_Id As Integer, ByVal CLI_Id As Integer, ByVal SKU As String, ByVal Cantidad As Integer, ByVal ReferenciaOld As Integer, ByVal Referencia As Integer, ByVal ActBodega As String, ByVal PrecioGuia As Integer, ByVal NetoGuia As Integer, ByVal BrutoGuia As Integer, ByVal NombreSku As String, ByVal userState As Object)
            If (Me.WPL_ActualizaDetalleOperationCompleted Is Nothing) Then
                Me.WPL_ActualizaDetalleOperationCompleted = AddressOf Me.OnWPL_ActualizaDetalleOperationCompleted
            End If
            Me.InvokeAsync("WPL_ActualizaDetalle", New Object() {Tipo, CAB_Id, CLI_Id, SKU, Cantidad, ReferenciaOld, Referencia, ActBodega, PrecioGuia, NetoGuia, BrutoGuia, NombreSku}, Me.WPL_ActualizaDetalleOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_ActualizaDetalleOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_ActualizaDetalleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_ActualizaDetalleCompleted(Me, New WPL_ActualizaDetalleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_ActualizaLavanderia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_ActualizaLavanderia(ByVal Tipo As String, ByVal CAB_Id As Integer, ByVal SKU As String, ByVal NombreSKU As String, ByVal FAM_Id As Integer, ByVal CLA_Id As Integer, ByVal GRP_Id As Integer, ByVal PrecioBruto As Integer, ByVal PesoKg As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_ActualizaLavanderia", New Object() {Tipo, CAB_Id, SKU, NombreSKU, FAM_Id, CLA_Id, GRP_Id, PrecioBruto, PesoKg})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaLavanderiaAsync(ByVal Tipo As String, ByVal CAB_Id As Integer, ByVal SKU As String, ByVal NombreSKU As String, ByVal FAM_Id As Integer, ByVal CLA_Id As Integer, ByVal GRP_Id As Integer, ByVal PrecioBruto As Integer, ByVal PesoKg As Integer)
            Me.WPL_ActualizaLavanderiaAsync(Tipo, CAB_Id, SKU, NombreSKU, FAM_Id, CLA_Id, GRP_Id, PrecioBruto, PesoKg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaLavanderiaAsync(ByVal Tipo As String, ByVal CAB_Id As Integer, ByVal SKU As String, ByVal NombreSKU As String, ByVal FAM_Id As Integer, ByVal CLA_Id As Integer, ByVal GRP_Id As Integer, ByVal PrecioBruto As Integer, ByVal PesoKg As Integer, ByVal userState As Object)
            If (Me.WPL_ActualizaLavanderiaOperationCompleted Is Nothing) Then
                Me.WPL_ActualizaLavanderiaOperationCompleted = AddressOf Me.OnWPL_ActualizaLavanderiaOperationCompleted
            End If
            Me.InvokeAsync("WPL_ActualizaLavanderia", New Object() {Tipo, CAB_Id, SKU, NombreSKU, FAM_Id, CLA_Id, GRP_Id, PrecioBruto, PesoKg}, Me.WPL_ActualizaLavanderiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_ActualizaLavanderiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_ActualizaLavanderiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_ActualizaLavanderiaCompleted(Me, New WPL_ActualizaLavanderiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_ActualizaLavanderiaRpt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_ActualizaLavanderiaRpt(ByVal Tipo As String, ByVal CLI_Id As Integer, ByVal Referencia As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_ActualizaLavanderiaRpt", New Object() {Tipo, CLI_Id, Referencia})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaLavanderiaRptAsync(ByVal Tipo As String, ByVal CLI_Id As Integer, ByVal Referencia As Integer)
            Me.WPL_ActualizaLavanderiaRptAsync(Tipo, CLI_Id, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaLavanderiaRptAsync(ByVal Tipo As String, ByVal CLI_Id As Integer, ByVal Referencia As Integer, ByVal userState As Object)
            If (Me.WPL_ActualizaLavanderiaRptOperationCompleted Is Nothing) Then
                Me.WPL_ActualizaLavanderiaRptOperationCompleted = AddressOf Me.OnWPL_ActualizaLavanderiaRptOperationCompleted
            End If
            Me.InvokeAsync("WPL_ActualizaLavanderiaRpt", New Object() {Tipo, CLI_Id, Referencia}, Me.WPL_ActualizaLavanderiaRptOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_ActualizaLavanderiaRptOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_ActualizaLavanderiaRptCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_ActualizaLavanderiaRptCompleted(Me, New WPL_ActualizaLavanderiaRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_ActualizaLavanderiaRptDoc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_ActualizaLavanderiaRptDoc(ByVal Tipo As String, ByVal CLI_Id As Integer, ByVal TipoDoc As String, ByVal CAB_Id As Integer, ByVal Folio As Integer, ByVal Referencia As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_ActualizaLavanderiaRptDoc", New Object() {Tipo, CLI_Id, TipoDoc, CAB_Id, Folio, Referencia})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaLavanderiaRptDocAsync(ByVal Tipo As String, ByVal CLI_Id As Integer, ByVal TipoDoc As String, ByVal CAB_Id As Integer, ByVal Folio As Integer, ByVal Referencia As Integer)
            Me.WPL_ActualizaLavanderiaRptDocAsync(Tipo, CLI_Id, TipoDoc, CAB_Id, Folio, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_ActualizaLavanderiaRptDocAsync(ByVal Tipo As String, ByVal CLI_Id As Integer, ByVal TipoDoc As String, ByVal CAB_Id As Integer, ByVal Folio As Integer, ByVal Referencia As Integer, ByVal userState As Object)
            If (Me.WPL_ActualizaLavanderiaRptDocOperationCompleted Is Nothing) Then
                Me.WPL_ActualizaLavanderiaRptDocOperationCompleted = AddressOf Me.OnWPL_ActualizaLavanderiaRptDocOperationCompleted
            End If
            Me.InvokeAsync("WPL_ActualizaLavanderiaRptDoc", New Object() {Tipo, CLI_Id, TipoDoc, CAB_Id, Folio, Referencia}, Me.WPL_ActualizaLavanderiaRptDocOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_ActualizaLavanderiaRptDocOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_ActualizaLavanderiaRptDocCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_ActualizaLavanderiaRptDocCompleted(Me, New WPL_ActualizaLavanderiaRptDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_LeeParametrosAdminWeb", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_LeeParametrosAdminWeb(ByVal Tipo As String, ByVal Llave1 As String, ByVal Llave2 As String, ByVal Llave3 As String, ByVal Valor As String, ByVal TipoPromo As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_LeeParametrosAdminWeb", New Object() {Tipo, Llave1, Llave2, Llave3, Valor, TipoPromo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_LeeParametrosAdminWebAsync(ByVal Tipo As String, ByVal Llave1 As String, ByVal Llave2 As String, ByVal Llave3 As String, ByVal Valor As String, ByVal TipoPromo As Integer)
            Me.WPL_LeeParametrosAdminWebAsync(Tipo, Llave1, Llave2, Llave3, Valor, TipoPromo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_LeeParametrosAdminWebAsync(ByVal Tipo As String, ByVal Llave1 As String, ByVal Llave2 As String, ByVal Llave3 As String, ByVal Valor As String, ByVal TipoPromo As Integer, ByVal userState As Object)
            If (Me.WPL_LeeParametrosAdminWebOperationCompleted Is Nothing) Then
                Me.WPL_LeeParametrosAdminWebOperationCompleted = AddressOf Me.OnWPL_LeeParametrosAdminWebOperationCompleted
            End If
            Me.InvokeAsync("WPL_LeeParametrosAdminWeb", New Object() {Tipo, Llave1, Llave2, Llave3, Valor, TipoPromo}, Me.WPL_LeeParametrosAdminWebOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_LeeParametrosAdminWebOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_LeeParametrosAdminWebCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_LeeParametrosAdminWebCompleted(Me, New WPL_LeeParametrosAdminWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_ListaCabecera", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_ListaCabecera(ByVal Tipo_ As String, ByVal TIE_Id_ As Integer, ByVal CAB_Id_ As Integer, ByVal CLI_Id_ As Integer, ByVal ADM_Id_ As Integer, ByVal USR_Id_ As Integer, ByVal CC_Id_ As Integer, ByVal Mes_ As Integer, ByVal Ano_ As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_ListaCabecera", New Object() {Tipo_, TIE_Id_, CAB_Id_, CLI_Id_, ADM_Id_, USR_Id_, CC_Id_, Mes_, Ano_})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_ListaCabeceraAsync(ByVal Tipo_ As String, ByVal TIE_Id_ As Integer, ByVal CAB_Id_ As Integer, ByVal CLI_Id_ As Integer, ByVal ADM_Id_ As Integer, ByVal USR_Id_ As Integer, ByVal CC_Id_ As Integer, ByVal Mes_ As Integer, ByVal Ano_ As Integer)
            Me.WPL_ListaCabeceraAsync(Tipo_, TIE_Id_, CAB_Id_, CLI_Id_, ADM_Id_, USR_Id_, CC_Id_, Mes_, Ano_, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_ListaCabeceraAsync(ByVal Tipo_ As String, ByVal TIE_Id_ As Integer, ByVal CAB_Id_ As Integer, ByVal CLI_Id_ As Integer, ByVal ADM_Id_ As Integer, ByVal USR_Id_ As Integer, ByVal CC_Id_ As Integer, ByVal Mes_ As Integer, ByVal Ano_ As Integer, ByVal userState As Object)
            If (Me.WPL_ListaCabeceraOperationCompleted Is Nothing) Then
                Me.WPL_ListaCabeceraOperationCompleted = AddressOf Me.OnWPL_ListaCabeceraOperationCompleted
            End If
            Me.InvokeAsync("WPL_ListaCabecera", New Object() {Tipo_, TIE_Id_, CAB_Id_, CLI_Id_, ADM_Id_, USR_Id_, CC_Id_, Mes_, Ano_}, Me.WPL_ListaCabeceraOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_ListaCabeceraOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_ListaCabeceraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_ListaCabeceraCompleted(Me, New WPL_ListaCabeceraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_POW_AdminCompras", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_POW_AdminCompras( _
                    ByVal tipo As String,  _
                    ByVal empresa As String,  _
                    ByVal codempresa As String,  _
                    ByVal rutempresa As String,  _
                    ByVal rutadmin As String,  _
                    ByVal rutuser As String,  _
                    ByVal tie_id As Integer,  _
                    ByVal emp_id As Integer,  _
                    ByVal adm_id As Integer,  _
                    ByVal usr_id As Integer,  _
                    ByVal atr_cli_id As Integer,  _
                    ByVal dir_desp As Integer,  _
                    ByVal dir_fact As Integer,  _
                    ByVal cc_id As Integer,  _
                    ByVal contacto As String,  _
                    ByVal email As String,  _
                    ByVal fono As String,  _
                    ByVal celular As String,  _
                    ByVal requiereapr As Integer,  _
                    ByVal PuedeCambiarCC As Integer,  _
                    ByVal PptoUnidades As Integer,  _
                    ByVal PptoValorNeto As Integer,  _
                    ByVal activo As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_POW_AdminCompras", New Object() {tipo, empresa, codempresa, rutempresa, rutadmin, rutuser, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact, cc_id, contacto, email, fono, celular, requiereapr, PuedeCambiarCC, PptoUnidades, PptoValorNeto, activo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_POW_AdminComprasAsync( _
                    ByVal tipo As String,  _
                    ByVal empresa As String,  _
                    ByVal codempresa As String,  _
                    ByVal rutempresa As String,  _
                    ByVal rutadmin As String,  _
                    ByVal rutuser As String,  _
                    ByVal tie_id As Integer,  _
                    ByVal emp_id As Integer,  _
                    ByVal adm_id As Integer,  _
                    ByVal usr_id As Integer,  _
                    ByVal atr_cli_id As Integer,  _
                    ByVal dir_desp As Integer,  _
                    ByVal dir_fact As Integer,  _
                    ByVal cc_id As Integer,  _
                    ByVal contacto As String,  _
                    ByVal email As String,  _
                    ByVal fono As String,  _
                    ByVal celular As String,  _
                    ByVal requiereapr As Integer,  _
                    ByVal PuedeCambiarCC As Integer,  _
                    ByVal PptoUnidades As Integer,  _
                    ByVal PptoValorNeto As Integer,  _
                    ByVal activo As Integer)
            Me.WPL_POW_AdminComprasAsync(tipo, empresa, codempresa, rutempresa, rutadmin, rutuser, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact, cc_id, contacto, email, fono, celular, requiereapr, PuedeCambiarCC, PptoUnidades, PptoValorNeto, activo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_POW_AdminComprasAsync( _
                    ByVal tipo As String,  _
                    ByVal empresa As String,  _
                    ByVal codempresa As String,  _
                    ByVal rutempresa As String,  _
                    ByVal rutadmin As String,  _
                    ByVal rutuser As String,  _
                    ByVal tie_id As Integer,  _
                    ByVal emp_id As Integer,  _
                    ByVal adm_id As Integer,  _
                    ByVal usr_id As Integer,  _
                    ByVal atr_cli_id As Integer,  _
                    ByVal dir_desp As Integer,  _
                    ByVal dir_fact As Integer,  _
                    ByVal cc_id As Integer,  _
                    ByVal contacto As String,  _
                    ByVal email As String,  _
                    ByVal fono As String,  _
                    ByVal celular As String,  _
                    ByVal requiereapr As Integer,  _
                    ByVal PuedeCambiarCC As Integer,  _
                    ByVal PptoUnidades As Integer,  _
                    ByVal PptoValorNeto As Integer,  _
                    ByVal activo As Integer,  _
                    ByVal userState As Object)
            If (Me.WPL_POW_AdminComprasOperationCompleted Is Nothing) Then
                Me.WPL_POW_AdminComprasOperationCompleted = AddressOf Me.OnWPL_POW_AdminComprasOperationCompleted
            End If
            Me.InvokeAsync("WPL_POW_AdminCompras", New Object() {tipo, empresa, codempresa, rutempresa, rutadmin, rutuser, tie_id, emp_id, adm_id, usr_id, atr_cli_id, dir_desp, dir_fact, cc_id, contacto, email, fono, celular, requiereapr, PuedeCambiarCC, PptoUnidades, PptoValorNeto, activo}, Me.WPL_POW_AdminComprasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_POW_AdminComprasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_POW_AdminComprasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_POW_AdminComprasCompleted(Me, New WPL_POW_AdminComprasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_POW_Estudiantes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_POW_Estudiantes(ByVal Tipo As String, ByVal RUT As String, ByVal CodEstudiante As Integer, ByVal UNIV_Id As Integer, ByVal CARR_Id As Integer, ByVal AnoUniv As Integer, ByVal EstudianteActivo As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_POW_Estudiantes", New Object() {Tipo, RUT, CodEstudiante, UNIV_Id, CARR_Id, AnoUniv, EstudianteActivo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_POW_EstudiantesAsync(ByVal Tipo As String, ByVal RUT As String, ByVal CodEstudiante As Integer, ByVal UNIV_Id As Integer, ByVal CARR_Id As Integer, ByVal AnoUniv As Integer, ByVal EstudianteActivo As Integer)
            Me.WPL_POW_EstudiantesAsync(Tipo, RUT, CodEstudiante, UNIV_Id, CARR_Id, AnoUniv, EstudianteActivo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_POW_EstudiantesAsync(ByVal Tipo As String, ByVal RUT As String, ByVal CodEstudiante As Integer, ByVal UNIV_Id As Integer, ByVal CARR_Id As Integer, ByVal AnoUniv As Integer, ByVal EstudianteActivo As Integer, ByVal userState As Object)
            If (Me.WPL_POW_EstudiantesOperationCompleted Is Nothing) Then
                Me.WPL_POW_EstudiantesOperationCompleted = AddressOf Me.OnWPL_POW_EstudiantesOperationCompleted
            End If
            Me.InvokeAsync("WPL_POW_Estudiantes", New Object() {Tipo, RUT, CodEstudiante, UNIV_Id, CARR_Id, AnoUniv, EstudianteActivo}, Me.WPL_POW_EstudiantesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_POW_EstudiantesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_POW_EstudiantesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_POW_EstudiantesCompleted(Me, New WPL_POW_EstudiantesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_POW_Promociones", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_POW_Promociones(ByVal tipo As String, ByVal email As String, ByVal codpromo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_POW_Promociones", New Object() {tipo, email, codpromo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_POW_PromocionesAsync(ByVal tipo As String, ByVal email As String, ByVal codpromo As String)
            Me.WPL_POW_PromocionesAsync(tipo, email, codpromo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_POW_PromocionesAsync(ByVal tipo As String, ByVal email As String, ByVal codpromo As String, ByVal userState As Object)
            If (Me.WPL_POW_PromocionesOperationCompleted Is Nothing) Then
                Me.WPL_POW_PromocionesOperationCompleted = AddressOf Me.OnWPL_POW_PromocionesOperationCompleted
            End If
            Me.InvokeAsync("WPL_POW_Promociones", New Object() {tipo, email, codpromo}, Me.WPL_POW_PromocionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_POW_PromocionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_POW_PromocionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_POW_PromocionesCompleted(Me, New WPL_POW_PromocionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_Sku_Atributos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_Sku_Atributos( _
                    ByVal Tipo_ As String,  _
                    ByVal Stock_ As String,  _
                    ByVal Disponible_ As String,  _
                    ByVal empresa_ As String,  _
                    ByVal prefijo_ As String,  _
                    ByVal nroskus_ As Integer,  _
                    ByVal TIE_Id_ As Integer,  _
                    ByVal Arbol_ As String,  _
                    ByVal ArbolNivel_ As Integer,  _
                    ByVal MbArtNom_ As String,  _
                    ByVal MbFamCod_ As String,  _
                    ByVal MbClaCod_ As String,  _
                    ByVal MbMerCod_ As String,  _
                    ByVal MbGrpCod_ As String,  _
                    ByVal PRF_Id_ As String,  _
                    ByVal Bodega_ As String,  _
                    ByVal BusquedaExacta_ As String,  _
                    ByVal SKUActivo_ As Integer,  _
                    ByVal FechaDesde_ As String,  _
                    ByVal FechaHasta_ As String,  _
                    ByVal IdAtrCliente_ As Integer,  _
                    ByVal CodPromo_ As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_Sku_Atributos", New Object() {Tipo_, Stock_, Disponible_, empresa_, prefijo_, nroskus_, TIE_Id_, Arbol_, ArbolNivel_, MbArtNom_, MbFamCod_, MbClaCod_, MbMerCod_, MbGrpCod_, PRF_Id_, Bodega_, BusquedaExacta_, SKUActivo_, FechaDesde_, FechaHasta_, IdAtrCliente_, CodPromo_})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_Sku_AtributosAsync( _
                    ByVal Tipo_ As String,  _
                    ByVal Stock_ As String,  _
                    ByVal Disponible_ As String,  _
                    ByVal empresa_ As String,  _
                    ByVal prefijo_ As String,  _
                    ByVal nroskus_ As Integer,  _
                    ByVal TIE_Id_ As Integer,  _
                    ByVal Arbol_ As String,  _
                    ByVal ArbolNivel_ As Integer,  _
                    ByVal MbArtNom_ As String,  _
                    ByVal MbFamCod_ As String,  _
                    ByVal MbClaCod_ As String,  _
                    ByVal MbMerCod_ As String,  _
                    ByVal MbGrpCod_ As String,  _
                    ByVal PRF_Id_ As String,  _
                    ByVal Bodega_ As String,  _
                    ByVal BusquedaExacta_ As String,  _
                    ByVal SKUActivo_ As Integer,  _
                    ByVal FechaDesde_ As String,  _
                    ByVal FechaHasta_ As String,  _
                    ByVal IdAtrCliente_ As Integer,  _
                    ByVal CodPromo_ As String)
            Me.WPL_Sku_AtributosAsync(Tipo_, Stock_, Disponible_, empresa_, prefijo_, nroskus_, TIE_Id_, Arbol_, ArbolNivel_, MbArtNom_, MbFamCod_, MbClaCod_, MbMerCod_, MbGrpCod_, PRF_Id_, Bodega_, BusquedaExacta_, SKUActivo_, FechaDesde_, FechaHasta_, IdAtrCliente_, CodPromo_, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_Sku_AtributosAsync( _
                    ByVal Tipo_ As String,  _
                    ByVal Stock_ As String,  _
                    ByVal Disponible_ As String,  _
                    ByVal empresa_ As String,  _
                    ByVal prefijo_ As String,  _
                    ByVal nroskus_ As Integer,  _
                    ByVal TIE_Id_ As Integer,  _
                    ByVal Arbol_ As String,  _
                    ByVal ArbolNivel_ As Integer,  _
                    ByVal MbArtNom_ As String,  _
                    ByVal MbFamCod_ As String,  _
                    ByVal MbClaCod_ As String,  _
                    ByVal MbMerCod_ As String,  _
                    ByVal MbGrpCod_ As String,  _
                    ByVal PRF_Id_ As String,  _
                    ByVal Bodega_ As String,  _
                    ByVal BusquedaExacta_ As String,  _
                    ByVal SKUActivo_ As Integer,  _
                    ByVal FechaDesde_ As String,  _
                    ByVal FechaHasta_ As String,  _
                    ByVal IdAtrCliente_ As Integer,  _
                    ByVal CodPromo_ As String,  _
                    ByVal userState As Object)
            If (Me.WPL_Sku_AtributosOperationCompleted Is Nothing) Then
                Me.WPL_Sku_AtributosOperationCompleted = AddressOf Me.OnWPL_Sku_AtributosOperationCompleted
            End If
            Me.InvokeAsync("WPL_Sku_Atributos", New Object() {Tipo_, Stock_, Disponible_, empresa_, prefijo_, nroskus_, TIE_Id_, Arbol_, ArbolNivel_, MbArtNom_, MbFamCod_, MbClaCod_, MbMerCod_, MbGrpCod_, PRF_Id_, Bodega_, BusquedaExacta_, SKUActivo_, FechaDesde_, FechaHasta_, IdAtrCliente_, CodPromo_}, Me.WPL_Sku_AtributosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_Sku_AtributosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_Sku_AtributosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_Sku_AtributosCompleted(Me, New WPL_Sku_AtributosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WPL_ValidaUsuarioAutoriza", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WPL_ValidaUsuarioAutoriza(ByVal accion As String, ByVal usuario As String, ByVal psw As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WPL_ValidaUsuarioAutoriza", New Object() {accion, usuario, psw})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WPL_ValidaUsuarioAutorizaAsync(ByVal accion As String, ByVal usuario As String, ByVal psw As String)
            Me.WPL_ValidaUsuarioAutorizaAsync(accion, usuario, psw, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WPL_ValidaUsuarioAutorizaAsync(ByVal accion As String, ByVal usuario As String, ByVal psw As String, ByVal userState As Object)
            If (Me.WPL_ValidaUsuarioAutorizaOperationCompleted Is Nothing) Then
                Me.WPL_ValidaUsuarioAutorizaOperationCompleted = AddressOf Me.OnWPL_ValidaUsuarioAutorizaOperationCompleted
            End If
            Me.InvokeAsync("WPL_ValidaUsuarioAutoriza", New Object() {accion, usuario, psw}, Me.WPL_ValidaUsuarioAutorizaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWPL_ValidaUsuarioAutorizaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WPL_ValidaUsuarioAutorizaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WPL_ValidaUsuarioAutorizaCompleted(Me, New WPL_ValidaUsuarioAutorizaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WTT_Web_Encuesta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WTT_Web_Encuesta( _
                    ByVal Tipo As String,  _
                    ByVal ENC_Id As Integer,  _
                    ByVal ETA_Id As Integer,  _
                    ByVal NEC_Id As Integer,  _
                    ByVal DUD_Id As Integer,  _
                    ByVal CAB_Id As Integer,  _
                    ByVal Caso As Integer,  _
                    ByVal ClienteNombre As String,  _
                    ByVal ClienteEMail As String,  _
                    ByVal ClienteFono As String,  _
                    ByVal ClienteRubro As String,  _
                    ByVal EjecutivaNombre As String,  _
                    ByVal ClienteTerminaCompra As String,  _
                    ByVal CoordinaNuevoContacto As String,  _
                    ByVal CordinaFecha As String,  _
                    ByVal PorqueNoNuevoContacto As String,  _
                    ByVal EnvioCodigoDescuento As String,  _
                    ByVal AutorizaEnvioOfertas As String,  _
                    ByVal FolioNVAsociada As Integer,  _
                    ByVal FaltaInformacionResponder As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WTT_Web_Encuesta", New Object() {Tipo, ENC_Id, ETA_Id, NEC_Id, DUD_Id, CAB_Id, Caso, ClienteNombre, ClienteEMail, ClienteFono, ClienteRubro, EjecutivaNombre, ClienteTerminaCompra, CoordinaNuevoContacto, CordinaFecha, PorqueNoNuevoContacto, EnvioCodigoDescuento, AutorizaEnvioOfertas, FolioNVAsociada, FaltaInformacionResponder})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WTT_Web_EncuestaAsync( _
                    ByVal Tipo As String,  _
                    ByVal ENC_Id As Integer,  _
                    ByVal ETA_Id As Integer,  _
                    ByVal NEC_Id As Integer,  _
                    ByVal DUD_Id As Integer,  _
                    ByVal CAB_Id As Integer,  _
                    ByVal Caso As Integer,  _
                    ByVal ClienteNombre As String,  _
                    ByVal ClienteEMail As String,  _
                    ByVal ClienteFono As String,  _
                    ByVal ClienteRubro As String,  _
                    ByVal EjecutivaNombre As String,  _
                    ByVal ClienteTerminaCompra As String,  _
                    ByVal CoordinaNuevoContacto As String,  _
                    ByVal CordinaFecha As String,  _
                    ByVal PorqueNoNuevoContacto As String,  _
                    ByVal EnvioCodigoDescuento As String,  _
                    ByVal AutorizaEnvioOfertas As String,  _
                    ByVal FolioNVAsociada As Integer,  _
                    ByVal FaltaInformacionResponder As String)
            Me.WTT_Web_EncuestaAsync(Tipo, ENC_Id, ETA_Id, NEC_Id, DUD_Id, CAB_Id, Caso, ClienteNombre, ClienteEMail, ClienteFono, ClienteRubro, EjecutivaNombre, ClienteTerminaCompra, CoordinaNuevoContacto, CordinaFecha, PorqueNoNuevoContacto, EnvioCodigoDescuento, AutorizaEnvioOfertas, FolioNVAsociada, FaltaInformacionResponder, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WTT_Web_EncuestaAsync( _
                    ByVal Tipo As String,  _
                    ByVal ENC_Id As Integer,  _
                    ByVal ETA_Id As Integer,  _
                    ByVal NEC_Id As Integer,  _
                    ByVal DUD_Id As Integer,  _
                    ByVal CAB_Id As Integer,  _
                    ByVal Caso As Integer,  _
                    ByVal ClienteNombre As String,  _
                    ByVal ClienteEMail As String,  _
                    ByVal ClienteFono As String,  _
                    ByVal ClienteRubro As String,  _
                    ByVal EjecutivaNombre As String,  _
                    ByVal ClienteTerminaCompra As String,  _
                    ByVal CoordinaNuevoContacto As String,  _
                    ByVal CordinaFecha As String,  _
                    ByVal PorqueNoNuevoContacto As String,  _
                    ByVal EnvioCodigoDescuento As String,  _
                    ByVal AutorizaEnvioOfertas As String,  _
                    ByVal FolioNVAsociada As Integer,  _
                    ByVal FaltaInformacionResponder As String,  _
                    ByVal userState As Object)
            If (Me.WTT_Web_EncuestaOperationCompleted Is Nothing) Then
                Me.WTT_Web_EncuestaOperationCompleted = AddressOf Me.OnWTT_Web_EncuestaOperationCompleted
            End If
            Me.InvokeAsync("WTT_Web_Encuesta", New Object() {Tipo, ENC_Id, ETA_Id, NEC_Id, DUD_Id, CAB_Id, Caso, ClienteNombre, ClienteEMail, ClienteFono, ClienteRubro, EjecutivaNombre, ClienteTerminaCompra, CoordinaNuevoContacto, CordinaFecha, PorqueNoNuevoContacto, EnvioCodigoDescuento, AutorizaEnvioOfertas, FolioNVAsociada, FaltaInformacionResponder}, Me.WTT_Web_EncuestaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWTT_Web_EncuestaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WTT_Web_EncuestaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WTT_Web_EncuestaCompleted(Me, New WTT_Web_EncuestaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_PromocionesMktCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_PromocionesMktCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_PromocionesMktCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_ActividadesCompletedEventHandler(ByVal sender As Object, ByVal e As POS_ActividadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_ActividadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_ActualizaCabeceraCompletedEventHandler(ByVal sender As Object, ByVal e As POS_ActualizaCabeceraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_ActualizaCabeceraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_ActualizaDetalleCompletedEventHandler(ByVal sender As Object, ByVal e As POS_ActualizaDetalleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_ActualizaDetalleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_ActualizaPagosCompletedEventHandler(ByVal sender As Object, ByVal e As POS_ActualizaPagosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_ActualizaPagosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_AutentificaCompletedEventHandler(ByVal sender As Object, ByVal e As POS_AutentificaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_AutentificaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_Autentifica2CompletedEventHandler(ByVal sender As Object, ByVal e As POS_Autentifica2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_Autentifica2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_AyudaCompletedEventHandler(ByVal sender As Object, ByVal e As POS_AyudaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_AyudaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_CAJASCompletedEventHandler(ByVal sender As Object, ByVal e As POS_CAJASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_CAJASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_CajerosCompletedEventHandler(ByVal sender As Object, ByVal e As POS_CajerosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_CajerosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_CiudadesCompletedEventHandler(ByVal sender As Object, ByVal e As POS_CiudadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_CiudadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_ComunasCompletedEventHandler(ByVal sender As Object, ByVal e As POS_ComunasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_ComunasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_ConciliaCompletedEventHandler(ByVal sender As Object, ByVal e As POS_ConciliaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_ConciliaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_Consulta_CabeceraCompletedEventHandler(ByVal sender As Object, ByVal e As POS_Consulta_CabeceraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_Consulta_CabeceraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_CorrelativoCompletedEventHandler(ByVal sender As Object, ByVal e As POS_CorrelativoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_CorrelativoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_DocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As POS_DocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_DocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_DocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As POS_DocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_DocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_Documentos_WopCompletedEventHandler(ByVal sender As Object, ByVal e As POS_Documentos_WopCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_Documentos_WopCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_IngresaRespaldoArqueoCompletedEventHandler(ByVal sender As Object, ByVal e As POS_IngresaRespaldoArqueoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_IngresaRespaldoArqueoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_ParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As POS_ParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_ParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_Parametros_ConfiguracionCompletedEventHandler(ByVal sender As Object, ByVal e As POS_Parametros_ConfiguracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_Parametros_ConfiguracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_RegionesCompletedEventHandler(ByVal sender As Object, ByVal e As POS_RegionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_RegionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_TipoTarjetasdeCreditoGetCompletedEventHandler(ByVal sender As Object, ByVal e As POS_TipoTarjetasdeCreditoGetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_TipoTarjetasdeCreditoGetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POS_ValidaStockCompletedEventHandler(ByVal sender As Object, ByVal e As POS_ValidaStockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POS_ValidaStockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_AdminCompra_AdminCompletedEventHandler(ByVal sender As Object, ByVal e As POW_AdminCompra_AdminCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POW_AdminCompra_AdminCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_AdminCompra_ArbolCompletedEventHandler(ByVal sender As Object, ByVal e As POW_AdminCompra_ArbolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POW_AdminCompra_ArbolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_AdminCompra_CentroCostoCompletedEventHandler(ByVal sender As Object, ByVal e As POW_AdminCompra_CentroCostoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POW_AdminCompra_CentroCostoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_AdminCompra_CompradorCompletedEventHandler(ByVal sender As Object, ByVal e As POW_AdminCompra_CompradorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POW_AdminCompra_CompradorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_AdminCompra_FichaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As POW_AdminCompra_FichaEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POW_AdminCompra_FichaEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_AdminCompra_RutEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As POW_AdminCompra_RutEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POW_AdminCompra_RutEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_Evento_ConsultaCompletedEventHandler(ByVal sender As Object, ByVal e As POW_Evento_ConsultaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class POW_Evento_ConsultaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_Evento_InsertaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub POW_Evento_Inserta_NuevoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub ValidaRolUsuarioWopCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaRolUsuarioWopCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaRolUsuarioWopCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub ValidaUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WEB_ArbolCompletedEventHandler(ByVal sender As Object, ByVal e As WEB_ArbolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WEB_ArbolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WEB_AtributosCompletedEventHandler(ByVal sender As Object, ByVal e As WEB_AtributosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WEB_AtributosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WEB_ConsultaCompletedEventHandler(ByVal sender As Object, ByVal e As WEB_ConsultaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WEB_ConsultaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WEB_GirosCompletedEventHandler(ByVal sender As Object, ByVal e As WEB_GirosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WEB_GirosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WEB_ImagenesCompletedEventHandler(ByVal sender As Object, ByVal e As WEB_ImagenesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WEB_ImagenesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WEB_PasswordCompletedEventHandler(ByVal sender As Object, ByVal e As WEB_PasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WEB_PasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WEB_UsuariosCompletedEventHandler(ByVal sender As Object, ByVal e As WEB_UsuariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WEB_UsuariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_ActualizaCabeceraCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_ActualizaCabeceraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_ActualizaCabeceraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_ActualizaDetalleCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_ActualizaDetalleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_ActualizaDetalleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_ActualizaLavanderiaCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_ActualizaLavanderiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_ActualizaLavanderiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_ActualizaLavanderiaRptCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_ActualizaLavanderiaRptCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_ActualizaLavanderiaRptCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_ActualizaLavanderiaRptDocCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_ActualizaLavanderiaRptDocCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_ActualizaLavanderiaRptDocCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_LeeParametrosAdminWebCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_LeeParametrosAdminWebCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_LeeParametrosAdminWebCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_ListaCabeceraCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_ListaCabeceraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_ListaCabeceraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_POW_AdminComprasCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_POW_AdminComprasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_POW_AdminComprasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_POW_EstudiantesCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_POW_EstudiantesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_POW_EstudiantesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_POW_PromocionesCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_POW_PromocionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_POW_PromocionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_Sku_AtributosCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_Sku_AtributosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_Sku_AtributosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WPL_ValidaUsuarioAutorizaCompletedEventHandler(ByVal sender As Object, ByVal e As WPL_ValidaUsuarioAutorizaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WPL_ValidaUsuarioAutorizaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub WTT_Web_EncuestaCompletedEventHandler(ByVal sender As Object, ByVal e As WTT_Web_EncuestaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WTT_Web_EncuestaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
